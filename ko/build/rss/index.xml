<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 06 Jun 2022 23:06:31 +0900</pubDate>
    <lastBuildDate>Mon, 06 Jun 2022 23:06:31 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>2022-06-06のJS: Angular 14、Cypress 10、Vue 2.7 α</title>
        <description>&lt;p&gt;JSer.info #595 - Angular 14がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.angular.io/angular-v14-is-now-available-391a6db736af&quot;&gt;Angular v14 is now available!. We are excited to announce the release… | by Emma Twersky | Jun, 2022 | Angular Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;プレビュー機能としてstandalone componentsが追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/guide/standalone-components&quot;&gt;Angular - Getting started with standalone components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Angular Formsの型付けの改善、エラーメッセージをproduction buildではエラーコードのみに変更しファイルサイズの削減など。&lt;br&gt;
その他には、TypeScript 4.7のサポート、Angular CLIの改善などが含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Cypress 10がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cypress.io/blog/2022/06/01/cypress-10-release/&quot;&gt;Announcing Cypress 10 with Component Testing Beta!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cypress 10ではCypress Appが刷新されています。&lt;br&gt;
また、Component Testの仕組みが追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.cypress.io/guides/component-testing/writing-your-first-component-test#Component-vs-End-to-End-in-a-Nutshell&quot;&gt;Writing Your First Component Test | Cypress Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Vue 2.xの最終minorリリースとなる予定の Vue.js 2.7αが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue/blob/main/CHANGELOG.md#270-alpha1-2022-05-31&quot;&gt;vue/CHANGELOG.md at main · vuejs/vue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Composition APIのフルサポート、ESMビルドに&lt;code&gt;ref&lt;/code&gt;などのnamed exportを追加などが含まれています。&lt;/p&gt;

&lt;p&gt;このVue 2.7が正式リリースされてから、18ヶ月後にVue 2.xはEOLとなる予定です。&lt;br&gt;
現時点では、Vue 2.xは2023年末にEOLの予定となっています。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Vue 2 end of life at the end of 2023 &lt;a href=&quot;https://twitter.com/hashtag/vuejs?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#vuejs&lt;/a&gt; &lt;a href=&quot;https://t.co/luvk1lt3U6&quot;&gt;pic.twitter.com/luvk1lt3U6&lt;/a&gt;&lt;/p&gt;&amp;mdash; Filip Rakowski 🇺🇦 (@filrakowski) &lt;a href=&quot;https://twitter.com/filrakowski/status/1532281407942365184?ref_src=twsrc%5Etfw&quot;&gt;June 2, 2022&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; 

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v18-3-0-current-node-js&quot;&gt;Node v18.3.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v18.3.0/&quot; title=&quot;Node v18.3.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v18.3.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 18.3.0リリース。&lt;br&gt;
&lt;code&gt;util&lt;/code&gt;モジュールに&lt;code&gt;parseArgs&lt;/code&gt;を追加、&lt;code&gt;http&lt;/code&gt;モジュールに&lt;code&gt;uniqueHeaders&lt;/code&gt;オプションを追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pkgjs/parseargs&quot; title=&quot;pkgjs/parseargs: Polyfill of proposal for \&amp;amp;#x60;util.parseArgs()\&amp;amp;#x60;&quot;&gt;pkgjs/parseargs: Polyfill of proposal for `util.parseArgs()`&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-v14-is-now-available-we-are-excited-to-announce-the-release-by-emma-twersky-jun-2022-angular-blog&quot;&gt;Angular v14 is now available!. We are excited to announce the release… | by Emma Twersky | Jun, 2022 | Angular Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.angular.io/angular-v14-is-now-available-391a6db736af&quot; title=&quot;Angular v14 is now available!. We are excited to announce the release… | by Emma Twersky | Jun, 2022 | Angular Blog&quot;&gt;blog.angular.io/angular-v14-is-now-available-391a6db736af&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 14リリース。&lt;br&gt;
プレビュー機能としてstandalone componentsの追加、Angular Formsの型付けの改善、エラーメッセージをproduction buildではエラーコードのみに変更。&lt;br&gt;
TypeScript 4.7のサポート、Angular CLIの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-cypress-10-with-component-testing-beta&quot;&gt;Announcing Cypress 10 with Component Testing Beta!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cypress.io/blog/2022/06/01/cypress-10-release/&quot; title=&quot;Announcing Cypress 10 with Component Testing Beta!&quot;&gt;cypress.io/blog/2022/06/01/cypress-10-release/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cypress 10リリース。&lt;br&gt;
Cypress Appの刷新、Component Testingがベータになった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3-16-0-mishoo-uglifyjs&quot;&gt;Release v3.16.0 · mishoo/UglifyJS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mishoo/UglifyJS/releases/tag/v3.16.0&quot; title=&quot;Release v3.16.0 · mishoo/UglifyJS&quot;&gt;github.com/mishoo/UglifyJS/releases/tag/v3.16.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;UflifyJS 3.16.0リリース。&lt;br&gt;
入力をES Modulesとして扱う&lt;code&gt;--module&lt;/code&gt;フラグを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue-changelog-md-at-main-vuejs-vue&quot;&gt;vue/CHANGELOG.md at main · vuejs/vue&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue/blob/main/CHANGELOG.md#270-alpha1-2022-05-31&quot; title=&quot;vue/CHANGELOG.md at main · vuejs/vue&quot;&gt;github.com/vuejs/vue/blob/main/CHANGELOG.md#270-alpha1-2022-05-31&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue.js 2.7αリリース。&lt;br&gt;
Vue 2.xの最後のminorリリース候補となり、Vue 2.7の正式リリースから18ヶ月後の2023年末にはVue 2.xはEOLとなる予定。&lt;br&gt;
Composition APIのフルサポート、ESMビルドに&lt;code&gt;ref&lt;/code&gt;などのnamed exportを追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/filrakowski/status/1532281407942365184&quot; title=&quot;Filip Rakowski 🇺🇦 on Twitter: &amp;amp;amp;amp;quot;Vue 2 end of life at the end of 2023 #vuejs https://t.co/luvk1lt3U6&amp;amp;amp;amp;quot; / Twitter&quot;&gt;Filip Rakowski 🇺🇦 on Twitter: &amp;amp;quot;Vue 2 end of life at the end of 2023 #vuejs https://t.co/luvk1lt3U6&amp;amp;quot; / Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npm-security-update-attack-campaign-using-stolen-oauth-tokens-the-github-blog&quot;&gt;npm security update: Attack campaign using stolen OAuth tokens | The GitHub Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.blog/2022-05-26-npm-security-update-oauth-tokens/&quot; title=&quot;npm security update: Attack campaign using stolen OAuth tokens | The GitHub Blog&quot;&gt;github.blog/2022-05-26-npm-security-update-oauth-tokens/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HerokuとTravis CIからGitHub OAuth Tokenの流出に関連して、npmが管理していたプライベートリポジトリからAWSへのアクセスキーが盗まれ、npmの一部情報が漏洩した。&lt;br&gt;
2015年のユーザー情報(ユーザー名/メールアドレス/パスワードハッシュ)、2021年のプライベートnpmパッケージのメタデータ、2022年の全てのプライベートパッケージの名前とバージョンが漏洩した。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-add-support-for-lts-n-aliases-actions-setup-node&quot;&gt;Release Add support for lts/-n aliases · actions/setup-node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/actions/setup-node/releases/tag/v3.3.0&quot; title=&quot;Release Add support for lts/-n aliases · actions/setup-node&quot;&gt;github.com/actions/setup-node/releases/tag/v3.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Actions&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GitHub ActionsでNode.js環境を設定するactions/setup-node 3.3.0リリース。&lt;br&gt;
&lt;code&gt;node-version: lts/-1&lt;/code&gt; のようにLTSの相対指定をサポート。&lt;br&gt;
3.2.0では、&lt;code&gt;current&lt;/code&gt;と&lt;code&gt;latest&lt;/code&gt;のaliasをサポートしている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/actions/setup-node/releases/tag/v2.2.0&quot; title=&quot;Release Support caching dependencies and LTS aliases · actions/setup-node&quot;&gt;Release Support caching dependencies and LTS aliases · actions/setup-node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/actions/setup-node/releases/tag/v3.2.0&quot; title=&quot;Release Add current, node, latest aliases · actions/setup-node&quot;&gt;Release Add current, node, latest aliases · actions/setup-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;processing-arrays-non-destructively-for-of-vs-reduce-vs-flatmap&quot;&gt;Processing Arrays non-destructively: `for-of` vs. `.reduce()` vs. `.flatMap()`&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://2ality.com/2022/05/processing-arrays-non-destructively.html&quot; title=&quot;Processing Arrays non-destructively: \`for-of\` vs. \`.reduce()\` vs. \`.flatMap()\`&quot;&gt;2ality.com/2022/05/processing-arrays-non-destructively.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Arrayのfilter/map/some/every/reduce/flatMapメソッドやfor ofなど、どれを使うべきかについて。&lt;br&gt;
それぞれの機能の紹介といつ使うべきかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-rfc-9239-blog-jxck-io&quot;&gt;JavaScript のメディアタイプと RFC 9239 | blog.jxck.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2022-05-31/text-javascript.html&quot; title=&quot;JavaScript のメディアタイプと RFC 9239 | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2022-05-31/text-javascript.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのMIME Typesについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-opportunities-experiments-taking-the-guesswork-out-of-performance-webpagetest-blog&quot;&gt;Introducing Opportunities &amp;amp; Experiments: Taking the Guesswork out of Performance - WebPageTest Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.webpagetest.org/posts/introducing-opportunities-and-experiments/&quot; title=&quot;Introducing Opportunities &amp;amp;amp; Experiments: Taking the Guesswork out of Performance - WebPageTest Blog&quot;&gt;blog.webpagetest.org/posts/introducing-opportunities-and-experiments/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebPageTestにOpportunitiesとExperiments機能が追加された。&lt;br&gt;
Opportunitiesはパフォーマンスやアクセシビリティを改善する項目をサジェストし実際に適用して結果がどうなるかを計測できる機能。&lt;br&gt;
ExperimentsはEdgeのProxyを通して一時的にサイトを書き換えて再計測できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pkg-land-find-npm-alternative-packages&quot;&gt;pkg.land - find NPM alternative packages&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pkg.land/&quot; title=&quot;pkg.land - find NPM alternative packages&quot;&gt;pkg.land/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npmパッケージの代替パッケージを検索できるサービス&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jridgewell-trace-mapping-trace-the-original-position-through-a-source-map&quot;&gt;jridgewell/trace-mapping: Trace the original position through a source map&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jridgewell/trace-mapping&quot; title=&quot;jridgewell/trace-mapping: Trace the original position through a source map&quot;&gt;github.com/jridgewell/trace-mapping&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;sourcemap&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;source-mapパッケージと互換性のあるAPIを提供するライブラリ。&lt;br&gt;
source-mapパッケージとは異なりWebAssemblyを利用せずに書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;svelvet&quot;&gt;Svelvet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://svelvet.io/&quot; title=&quot;Svelvet&quot;&gt;svelvet.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;diagram&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フローチャートを描画するSvelte component&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;histoire-dev-histoire-fast-and-beautiful-interactive-component-playgrounds-powered-by-vite&quot;&gt;histoire-dev/histoire: ⚡ Fast and beautiful interactive component playgrounds, powered by Vite&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/histoire-dev/histoire&quot; title=&quot;histoire-dev/histoire: ⚡ Fast and beautiful interactive component playgrounds, powered by Vite&quot;&gt;github.com/histoire-dev/histoire&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;vite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Viteを使ったStorybook的なツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webreflection-highlighted-code-a-textarea-builtin-extend-to-automatically-provide-code-highlights-based-on-one-of-the-languages-available-via-highlight-js&quot;&gt;WebReflection/highlighted-code: A textarea builtin extend to automatically provide code highlights based on one of the languages available via highlight.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/WebReflection/highlighted-code&quot; title=&quot;WebReflection/highlighted-code: A textarea builtin extend to automatically provide code highlights based on one of the languages available via highlight.js&quot;&gt;github.com/WebReflection/highlighted-code&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;textareaにシンタックスハイライトをオーバーレイできるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cyco130-vavite-develop-server-side-applications-with-vite&quot;&gt;cyco130/vavite: Develop server-side applications with Vite&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cyco130/vavite&quot; title=&quot;cyco130/vavite: Develop server-side applications with Vite&quot;&gt;github.com/cyco130/vavite&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;vite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Viteをサーバサイドに組み込むためのExpressなどに対応したMiddlewareやViteプラグイン。&lt;br&gt;
Viteを使ってサーバサイドのコードのTranspile、Live Reload、SSRなどに対応するための仕組みをを提供する。&lt;br&gt;
また、本番ビルド時には開発用のDevServerの参照を消すVite Pluginも提供している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-browser-engineering&quot;&gt;Web Browser Engineering&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://browser.engineering/&quot; title=&quot;Web Browser Engineering&quot;&gt;browser.engineering/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Pythonでブラウザのレンダリングエンジンを作りながらWebページの仕組みについて学ぶ本。&lt;br&gt;
HTMLのパース、レイアウト、CSSのパース、クリックの処理、Browser ChromeのUI実装、HTTPリクエストの処理、DOM APIの実装、CookieとSameSiteの実装。&lt;br&gt;
Skiaを使ったレンダリングとブレンディング、スケジューリング、アニメーションなどについて扱う&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://browser.engineering/blog/why-python.html&quot; title=&quot;Why Python? | Web Browser Engineering&quot;&gt;Why Python? | Web Browser Engineering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript&quot;&gt;スラスラわかるJavaScript 新版（桜庭 洋之 望月 幸太郎）｜翔泳社の本&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.shoeisha.co.jp/book/detail/9784798173269&quot; title=&quot;スラスラわかるJavaScript 新版（桜庭 洋之 望月 幸太郎）｜翔泳社の本&quot;&gt;www.shoeisha.co.jp/book/detail/9784798173269&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bok&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2022年07月13日 発売&lt;br&gt;
JavaScriptの入門書&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 06 Jun 2022 22:47:09 +0900</pubDate>
        <link>https://jser.info/2022/06/06/angular-14-cypress-10-vue-2.7-a/</link>
        <guid isPermaLink="true">https://jser.info/2022/06/06/angular-14-cypress-10-vue-2.7-a/</guid>
        
        <category>npm</category>
        
        <category>node.js</category>
        
        <category>vite</category>
        
        <category>Vue</category>
        
        <category>Tools</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2022-06-01のJS: Lerna 5.0.0、TypeScript 4.7、wireit</title>
        <description>&lt;p&gt;JSer.info #594 - メンテナンスが停止していて、その後&lt;a href=&quot;https://github.com/lerna/lerna/issues/3121&quot;&gt;Nx社にメンテナンス権限が移譲&lt;/a&gt;された後、初めてのアップデートであるLerna 5.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lerna/lerna/releases/tag/v5.0.0&quot;&gt;Release v5.0.0 · lerna/lerna&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 12以下のサポート終了、auditの問題が出ていたパッケージのアップデートなどが行われています。&lt;br&gt;
また、次のバージョンでは、&lt;code&gt;lerna run&lt;/code&gt;で内部的にNxを使うオプションが追加される予定です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lerna/lerna/pull/3139&quot;&gt;feat: add experimental support to run tasks via Nx by vsavkin · Pull Request #3139 · lerna/lerna&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;TypeScript 4.7がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-7/&quot;&gt;Announcing TypeScript 4.7 - TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TypeScript 4.7では、かなり多くの変更が含まれています。&lt;br&gt;
大きく分けるとNode.js ESM対応と、型周りの改善や構文の追加が含まれています。&lt;/p&gt;

&lt;p&gt;Node.jsのECMAScript Moduleをサポート、&lt;code&gt;.mts&lt;/code&gt;/&lt;code&gt;.cts&lt;/code&gt;という拡張子のサポートの追加、&lt;code&gt;moduleDetection&lt;/code&gt;オプションの追加が行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://quramy.medium.com/typescript-4-7-%E3%81%A8-native-node-js-esm-189753a19ba8&quot;&gt;TypeScript 4.7 と Native Node.js ESM | by Yosuke Kurami | May, 2022 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;型改善においてでは、Compuatedプロパティに対するコントロールフロー解析の改善、オブジェクトにおける関数の型推論の改善、Genericsの型を指定したaliasを定義できる Instantiation Expressionsをサポート、inferに対するextendsでの推論条件の追加をサポートが追加されています。&lt;br&gt;
また、すべたの型につけることは推奨されていませんが型が共変(in)/反変(out)/不変(in out)なのかを指定できるアノテーションを追加、モジュール解決時の探索方法をカスタマイズする&lt;code&gt;moduleSuffixes&lt;/code&gt;オプションの追加なども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-0-0-lerna-lerna&quot;&gt;Release v5.0.0 · lerna/lerna&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lerna/lerna/releases/tag/v5.0.0&quot; title=&quot;Release v5.0.0 · lerna/lerna&quot;&gt;github.com/lerna/lerna/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;monorepo&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;lerna v5.0.0リリース。&lt;br&gt;
Nx社にメンテナンスが移行してからの初のリリース。&lt;br&gt;
Node.js 12以下のサポート終了、auditの問題が出ていたパッケージのアップデートなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-7-typescript&quot;&gt;Announcing TypeScript 4.7 - TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-7/&quot; title=&quot;Announcing TypeScript 4.7 - TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-7/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.7リリース。&lt;br&gt;
Node.jsのECMAScript Moduleをサポート、&lt;code&gt;.mts&lt;/code&gt;/&lt;code&gt;.cts&lt;/code&gt;のサポート。&lt;br&gt;
&lt;code&gt;moduleDetection&lt;/code&gt;オプションの追加。 Compuatedプロパティに対するコントロールフロー解析の改善、オブジェクトにおける関数の型推論の改善。&lt;br&gt;
Genericsの型を指定したaliasを定義できる Instantiation Expressionsをサポート、inferに対するextendsでの推論条件の追加をサポート。&lt;br&gt;
型が共変(in)/反変(out)/不変(in out)なのかを指定できるアノテーションを追加、モジュール解決時の探索方法をカスタマイズする&lt;code&gt;moduleSuffixes&lt;/code&gt;オプションの追加。&lt;br&gt;
&lt;code&gt;import type&lt;/code&gt;/&lt;code&gt;import()&lt;/code&gt;/Reference Commentでresolution-modeを指定できるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://quramy.medium.com/typescript-4-7-%E3%81%A8-native-node-js-esm-189753a19ba8&quot; title=&quot;TypeScript 4.7 と Native Node.js ESM | by Yosuke Kurami | May, 2022 | Medium&quot;&gt;TypeScript 4.7 と Native Node.js ESM | by Yosuke Kurami | May, 2022 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v10-8-0-typestrong-ts-node&quot;&gt;Release v10.8.0 · TypeStrong/ts-node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/TypeStrong/ts-node/releases/tag/v10.8.0&quot; title=&quot;Release v10.8.0 · TypeStrong/ts-node&quot;&gt;github.com/TypeStrong/ts-node/releases/tag/v10.8.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ts-node v10.8.0リリース。&lt;br&gt;
TypeScript 4.7で追加されたECMAScript Modules in Node.jsのサポート。&lt;br&gt;
import時の拡張子をマッピングする&lt;code&gt;experimentalResolver&lt;/code&gt;オプションの追加。&lt;br&gt;
Node.jsの&lt;code&gt;--experimental-specifier-resolution&lt;/code&gt;フラグに対応する&lt;code&gt;experimentalSpecifierResolution&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-7/&quot; title=&quot;Announcing TypeScript 4.7 - TypeScript&quot;&gt;Announcing TypeScript 4.7 - TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v8-11-0-npm-cli&quot;&gt;Release v8.11.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v8.11.0&quot; title=&quot;Release v8.11.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v8.11.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm v8.11.0リリース。&lt;br&gt;
&lt;code&gt;npm birthday&lt;/code&gt;をDeprecatedに変更。&lt;br&gt;
&lt;code&gt;npm pkg&lt;/code&gt;コマンドがあるため&lt;code&gt;npm set-script&lt;/code&gt;をDeprecatedに変更。&lt;br&gt;
&lt;code&gt;--global&lt;/code&gt;と&lt;code&gt;--local&lt;/code&gt;フラグをそれぞれDeprecatedとなり、&lt;code&gt;--location=global/local&lt;/code&gt;の利用を推奨するようになるなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;parcel-v2-6-0&quot;&gt;Parcel v2.6.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://parceljs.org/blog/v2-6-0/&quot; title=&quot;Parcel v2.6.0&quot;&gt;parceljs.org/blog/v2-6-0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Parcel 2.6.0リリース。&lt;br&gt;
ReactのError overlayに対応、HMRとSource Mapが一緒に動作するように修正。&lt;br&gt;
CSSモジュールにローカルスコープ変数の概念を追加、未使用のCSS変数をツリーシェイクできるように。&lt;br&gt;
また&lt;code&gt;var(--name from &amp;quot;./vars.modulecss&amp;quot;)&lt;/code&gt;のようにファイルから変数をimportする独自の構文を追加など。&lt;br&gt;
その他には、importがglobでのインポートできるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember-4-4-released&quot;&gt;Ember 4.4 Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.emberjs.com/ember-released-4-4/&quot; title=&quot;Ember 4.4 Released&quot;&gt;blog.emberjs.com/ember-released-4-4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Ember&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 4.4リリース。&lt;br&gt;
`&lt;code&gt;の有効化、&lt;/code&gt;ember generate&lt;code&gt;で生成されるテストテンプレートのモジュールを変更可能に、&lt;/code&gt;hasListeners`を公開APIに変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-103-beta-early-navigation-hints-a-host-of-completed-origin-trials-and-more&quot;&gt;Chromium Blog: Chrome 103 Beta: Early Navigation Hints, a Host of Completed Origin Trials, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2022/05/chrome-103-beta-early-navigation-hints.html&quot; title=&quot;Chromium Blog: Chrome 103 Beta: Early Navigation Hints, a Host of Completed Origin Trials, and More&quot;&gt;blog.chromium.org/2022/05/chrome-103-beta-early-navigation-hints.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 103 Betaリリース。&lt;br&gt;
Origin TrialとしてFederated Credentials Managementのサポート。&lt;br&gt;
103 Early Hints HTTPのサポート、&lt;code&gt;AbortSignal.timeout()&lt;/code&gt;のサポート、Elementに対して&lt;code&gt;aria*&lt;/code&gt;プロパティの追加。&lt;br&gt;
&lt;code&gt;deflate-raw&lt;/code&gt;の圧縮型式をサポート、Form要素が&lt;code&gt;rel&lt;/code&gt;属性のサポート。&lt;br&gt;
また、Sandbox iframeでのcustom protocolのナビゲーションをブロックと&lt;code&gt;allow-top-navigation-to-custom-protocols&lt;/code&gt;の追加など。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-0-0-alpha-1-axios-axios&quot;&gt;Release v1.0.0-alpha.1 · axios/axios&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/axios/axios/releases/tag/v1.0.0-alpha.1&quot; title=&quot;Release v1.0.0-alpha.1 · axios/axios&quot;&gt;github.com/axios/axios/releases/tag/v1.0.0-alpha.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;axios v1.0.0-alpha.1リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-0-0-mdn-browser-compat-data&quot;&gt;Release v5.0.0 · mdn/browser-compat-data&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mdn/browser-compat-data/releases/tag/v5.0.0&quot; title=&quot;Release v5.0.0 · mdn/browser-compat-data&quot;&gt;github.com/mdn/browser-compat-data/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;browser-compat-data 5.0.0リリース。&lt;br&gt;
ESMの対応、TypeScriptの対応。&lt;br&gt;
&lt;code&gt;matches&lt;/code&gt;の削除、&lt;code&gt;__meta&lt;/code&gt;オブジェクトの追加、&lt;code&gt;upstream&lt;/code&gt;フィールドの追加、&lt;code&gt;impl_url&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-millions-of-lines-of-code-to-typescript&quot;&gt;Migrating millions of lines of code to TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://stripe.com/blog/migrating-to-typescript&quot; title=&quot;Migrating millions of lines of code to TypeScript&quot;&gt;stripe.com/blog/migrating-to-typescript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AirtableのcodemodをベースにFlowTypeからTypeScriptへの切り替えをおこなった話。&lt;br&gt;
マイグレーションスクリプト、Lintやテストの下準備などを行いコードロックした1日でコードベースをまとめて移行したという話。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/airtable-eng/the-continual-evolution-of-airtables-codebase-migrating-a-million-lines-of-code-to-typescript-612c008baf5c&quot; title=&quot;The continual evolution of Airtable’s codebase: Migrating a million lines of code to TypeScript | by Caleb Meredith | The Airtable Engineering Blog | Medium&quot;&gt;The continual evolution of Airtable’s codebase: Migrating a million lines of code to TypeScript | by Caleb Meredith | The Airtable Engineering Blog | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;avoiding-puppeteer-antipatterns&quot;&gt;Avoiding Puppeteer Antipatterns&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://serpapi.com/blog/puppeteer-antipatterns/&quot; title=&quot;Avoiding Puppeteer Antipatterns&quot;&gt;serpapi.com/blog/puppeteer-antipatterns/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;puppeteer&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteerのアンチパターンについての記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-balance-has-shifted-away-from-spas-read-the-tea-leaves&quot;&gt;The balance has shifted away from SPAs | Read the Tea Leaves&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nolanlawson.com/2022/05/21/the-balance-has-shifted-away-from-spas/&quot; title=&quot;The balance has shifted away from SPAs | Read the Tea Leaves&quot;&gt;nolanlawson.com/2022/05/21/the-balance-has-shifted-away-from-spas/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;クライアントサイドルーティングを扱うものとしてのSPAは、ページ移動の問題がブラウザ側で解決されてきているので、ナビゲーション問題を解決するためだけにSPAである必要性はなるなるのではという話。&lt;br&gt;
ブラウザ側のPaint holdingやBF Cacheなどの実装によってMPAでも問題なく高速なナビゲーションが可能になってきている点や、後続する記事ではSPAの長所や改善についても書かれている。&lt;br&gt;
また、近年まではSPAを扱うフレームワークが主流だったが、AstroやQwikなどのMPAを扱うフレームワークも増えてきているため選択肢は変わってくるのではという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nolanlawson.com/2022/05/25/more-thoughts-on-spas/&quot; title=&quot;More thoughts on SPAs | Read the Tea Leaves&quot;&gt;More thoughts on SPAs | Read the Tea Leaves&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nolanlawson.com/2022/05/29/state-is-hard-why-spas-will-persist/&quot; title=&quot;State is hard: why SPAs will persist | Read the Tea Leaves&quot;&gt;State is hard: why SPAs will persist | Read the Tea Leaves&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;component-toolkit-for-creating-live-running-code-editing-experiences-sandpack&quot;&gt;Component toolkit for creating live-running code editing experiences | Sandpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://sandpack.codesandbox.io/&quot; title=&quot;Component toolkit for creating live-running code editing experiences | Sandpack&quot;&gt;sandpack.codesandbox.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CodeSandboxのライブコーディング向けのブラウザSandbox環境(エディタ/プレビュー)を作れるライブラリ。&lt;br&gt;
React向けのコンポーネント、各種ライブラリ向けのテンプレート、書いたコードをCodesandbox上で開く機能を持っている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-wireit-wireit-upgrades-your-npm-scripts-to-make-them-smarter-and-more-efficient&quot;&gt;google/wireit: Wireit upgrades your npm scripts to make them smarter and more efficient.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/wireit&quot; title=&quot;google/wireit: Wireit upgrades your npm scripts to make them smarter and more efficient.&quot;&gt;github.com/google/wireit&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Turborepoのようにnpm run-scriptsの依存関係を定義し、実行結果をキャッシュできるツール。&lt;br&gt;
差分があった時だけビルドするインクリメンタルビルド、ファイル変更を監視してのビルド、CIでのキャッシュの永続化の仕組みをもつ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;shopify-remote-ui&quot;&gt;Shopify/remote-ui&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Shopify/remote-ui&quot; title=&quot;Shopify/remote-ui&quot;&gt;github.com/Shopify/remote-ui&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;UIの定義をWeb WorkerなどのUIスレッド以外で行い、メッセージパッシングして受け取ったオブジェクトからレンダリングすることでSandboxに利用できるツールキット。&lt;br&gt;
DOMライクなAPIやReact/Vue向けのAPIが用意されていて、ユーザーにUIツリーの定義を書いてもらい、それをレンダリングするホスト環境を別途実装できる。&lt;br&gt;
ShopifyやStripe Appsで利用されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://shopify.engineering/remote-rendering-ui-extensibility&quot; title=&quot;Remote Rendering: Shopify’s Take on Extensible UI — Development (2022)&quot;&gt;Remote Rendering: Shopify’s Take on Extensible UI — Development (2022)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 01 Jun 2022 12:58:35 +0900</pubDate>
        <link>https://jser.info/2022/06/01/lerna-5.0.0-typescript-4.7-wireit/</link>
        <guid isPermaLink="true">https://jser.info/2022/06/01/lerna-5.0.0-typescript-4.7-wireit/</guid>
        
        <category>TypeScript</category>
        
        <category>React</category>
        
        <category>npm</category>
        
        <category>bundler</category>
        
        <category>flowtype</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2022-05-24のJS: Deno 1.22、Storybook 6.5(webpack Lazy Compilation)、Next.js Layouts RFC</title>
        <description>&lt;p&gt;JSer.info #593 - Deno 1.22がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.com/blog/v1.22&quot;&gt;Deno 1.22 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Denoには、3つの型チェックモードがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Full: ローカルとリモートの依存関係を含めた全ての型をチェックする&lt;/li&gt;
&lt;li&gt;Local: ローカルの型のみをチェックする&lt;/li&gt;
&lt;li&gt;None: 型をチェックしない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.21まではコマンドによっては&amp;quot;Full&amp;quot;モードで型チェックをしていましたが、1.22からは&amp;quot;Local&amp;quot;モードで型チェックをするのがデフォルトとなりました。&lt;br&gt;
また、次のリリース予定である1.23では、&lt;code&gt;deno run&lt;/code&gt;と&lt;code&gt;deno cache&lt;/code&gt;はデフォルトで&amp;quot;None&amp;quot;モードとなり型チェックをしなくなる予定となっています。&lt;/p&gt;

&lt;p&gt;そのほかの変更として、&lt;code&gt;Deno.emit()&lt;/code&gt;を削除、Worker内でも&lt;code&gt;Deno&lt;/code&gt;名前空間がデフォルトで有効化、&lt;code&gt;--no-config&lt;/code&gt;フラグの追加などが行われています。&lt;br&gt;
また、&lt;code&gt;Navigator.userAgent&lt;/code&gt;のサポート、&lt;a href=&quot;https://github.com/whatwg/fetch/pull/1392&quot;&gt;&lt;code&gt;Response.json()&lt;/code&gt;静的メソッド&lt;/a&gt;の追加なども含まれます。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Storybook 6.5.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/storybookjs/storybook/releases/tag/v6.5.0&quot;&gt;Release v6.5.0 · storybookjs/storybook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpack 5のlazy compilationをサポートが追加され、開発モードでの起動速度や再ビルドのパフォーマンスが改善されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://storybook.js.org/blog/storybook-lazy-compilation-for-webpack/&quot;&gt;Storybook Lazy Compilation for Webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://storybook.js.org/blog/storybook-performance-from-webpack-to-vite/&quot;&gt;Storybook Performance: Vite vs Webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他には、React 18の&lt;code&gt;createRoot&lt;/code&gt;のサポート、MDX2のサポートが行われています。&lt;br&gt;
また、Viteの設定ファイル(&lt;code&gt;vite.config.js&lt;/code&gt;)がある場合は、自動的にViteを使うように変更されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-22-release-notes&quot;&gt;Deno 1.22 Release Notes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.22&quot; title=&quot;Deno 1.22 Release Notes&quot;&gt;deno.com/blog/v1.22&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.22.0リリース。&lt;br&gt;
デフォルトの型チェックの対象が依存関係を含まないローカルのみとなる。&lt;br&gt;
&lt;code&gt;Deno.emit()&lt;/code&gt;を削除、Worker内でも&lt;code&gt;Deno&lt;/code&gt;名前空間がデフォルトで有効化、&lt;code&gt;--no-config&lt;/code&gt;フラグの追加。&lt;br&gt;
&lt;code&gt;Navigator.userAgent&lt;/code&gt;のサポート、&lt;code&gt;Response.json()&lt;/code&gt;静的メソッドの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/denoland/deno/releases/tag/v1.22.0&quot; title=&quot;Release v1.22.0 · denoland/deno&quot;&gt;Release v1.22.0 · denoland/deno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-5-0-storybookjs-storybook&quot;&gt;Release v6.5.0 · storybookjs/storybook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/storybookjs/storybook/releases/tag/v6.5.0&quot; title=&quot;Release v6.5.0 · storybookjs/storybook&quot;&gt;github.com/storybookjs/storybook/releases/tag/v6.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Storybook v6.5.0リリース。&lt;br&gt;
webpack 5のlazy compilationをサポート、React 18の&lt;code&gt;createRoot&lt;/code&gt;のサポート、MDX2のサポート。&lt;br&gt;
また、Viteの設定ファイルがある場合は、自動的にViteを使うように変更されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#from-version-64x-to-650&quot; title=&quot;storybook/MIGRATION.md at next · storybookjs/storybook&quot;&gt;storybook/MIGRATION.md at next · storybookjs/storybook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;7-18-0-released-destructuring-private-elements-and-typescript-4-7-babel&quot;&gt;7.18.0 Released: Destructuring private elements and TypeScript 4.7 · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2022/05/19/7.18.0&quot; title=&quot;7.18.0 Released: Destructuring private elements and TypeScript 4.7 · Babel&quot;&gt;babeljs.io/blog/2022/05/19/7.18.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel v7.18.0リリース。&lt;br&gt;
TypeScript 4.7のoptional variance(&lt;code&gt;in&lt;/code&gt;/&lt;code&gt;out&lt;/code&gt;)、instantiation expressionsなどに対応。&lt;br&gt;
Stage 2のPrivate destructuringのサポート、&lt;code&gt;regenerator-runtime&lt;/code&gt;を自動的にinline化する変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-0-0-capricorn86-happy-dom&quot;&gt;Release v4.0.0 · capricorn86/happy-dom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/capricorn86/happy-dom/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · capricorn86/happy-dom&quot;&gt;github.com/capricorn86/happy-dom/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Happy DOM v4.0.0リリース。&lt;br&gt;
Void Elementのシリアライズバグを修正。&lt;br&gt;
&lt;code&gt;&amp;lt;img /&amp;gt;&lt;/code&gt;を&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;にシリアライズ、一方でSVG要素は&lt;code&gt;&amp;lt;circle /&amp;gt;&lt;/code&gt;を&lt;code&gt;&amp;lt;circle&amp;gt;&amp;lt;/circle&amp;gt;&lt;/code&gt;へとシリアライズするように修正。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-2-0-mithriljs-mithril-js&quot;&gt;Release v2.2.0 · MithrilJS/mithril.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MithrilJS/mithril.js/releases/tag/v2.2.0&quot; title=&quot;Release v2.2.0 · MithrilJS/mithril.js&quot;&gt;github.com/MithrilJS/mithril.js/releases/tag/v2.2.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;mithril.js v2.2.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v18-2-0-current-node-js&quot;&gt;Node v18.2.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v18.2.0/&quot; title=&quot;Node v18.2.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v18.2.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 18.2.0リリース。&lt;br&gt;
OpenSSLのセキュリティ修正、&lt;code&gt;http.Server&lt;/code&gt;に&lt;code&gt;closeAllConnections&lt;/code&gt;と&lt;code&gt;closeIdleConnections&lt;/code&gt;を追加。&lt;br&gt;
&lt;code&gt;perf_hooks&lt;/code&gt;に&lt;code&gt;PerformanceResourceTiming&lt;/code&gt;のサポートを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nvh95-jest-preview-debug-your-jest-tests-effortlessly&quot;&gt;nvh95/jest-preview: Debug your Jest tests. Effortlessly.🛠🖼&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nvh95/jest-preview&quot; title=&quot;nvh95/jest-preview: Debug your Jest tests. Effortlessly.🛠🖼&quot;&gt;github.com/nvh95/jest-preview&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jest&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jestで実行中のテストに&lt;code&gt;debug()&lt;/code&gt;関数を仕込むことで、実行中のテストが作成したHTMLをブラウザでプレビューしながらデバッグできるライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;adriancooney-puppeteer-heap-snapshot-api-and-cli-tool-to-fetch-and-query-chome-devtools-heap-snapshots&quot;&gt;adriancooney/puppeteer-heap-snapshot: API and CLI tool to fetch and query Chome DevTools heap snapshots.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/adriancooney/puppeteer-heap-snapshot&quot; title=&quot;adriancooney/puppeteer-heap-snapshot: API and CLI tool to fetch and query Chome DevTools heap snapshots.&quot;&gt;github.com/adriancooney/puppeteer-heap-snapshot&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;puppeteer&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteerを使いサイトへアクセスして、Heap Snapshotを取得し、そのSnapshotから特定のプロパティ名にマッチするオブジェクトを取り出すスクレイピングライブラリ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.adriancooney.ie/blog/web-scraping-via-javascript-heap-snapshots&quot; title=&quot;Web Scraping via Javascript Runtime Heap Snapshots - Adrian Cooney&amp;amp;amp;#039;s Blog&quot;&gt;Web Scraping via Javascript Runtime Heap Snapshots - Adrian Cooney&amp;#039;s Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-electron-v19-0-0-electron-electron&quot;&gt;Release electron v19.0.0 · electron/electron&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/electron/electron/releases/tag/v19.0.0&quot; title=&quot;Release electron v19.0.0 · electron/electron&quot;&gt;github.com/electron/electron/releases/tag/v19.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron v19.0.0リリース。&lt;br&gt;
Chromium 102、V8 10.2、Node.js 16.14.2にアップデート。&lt;br&gt;
Electron 20からpreload scriptsは自動的にsandboxで実行される。&lt;br&gt;
そのため、&lt;code&gt;nodeIntegration: true&lt;/code&gt; かつ &lt;code&gt;sandbox&lt;/code&gt;が無指定の場合に警告が出るようになった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-0-0-faker-js-faker&quot;&gt;Release v7.0.0 · faker-js/faker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/faker-js/faker/releases/tag/v7.0.0&quot; title=&quot;Release v7.0.0 · faker-js/faker&quot;&gt;github.com/faker-js/faker/releases/tag/v7.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Faker v7.0.0リリース。&lt;br&gt;
default exportを削除、ES2020をサポートしている環境をターゲットに変更、Node.js 12のサポート終了など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-surprising-truth-about-pixels-and-accessibility-should-i-use-pixels-or-rems&quot;&gt;The Surprising Truth About Pixels and Accessibility: should I use pixels or rems?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.joshwcomeau.com/css/surprising-truth-about-pixels-and-accessibility/&quot; title=&quot;The Surprising Truth About Pixels and Accessibility: should I use pixels or rems?&quot;&gt;www.joshwcomeau.com/css/surprising-truth-about-pixels-and-accessibility/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;fonts&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;px&lt;/code&gt;と&lt;code&gt;rem&lt;/code&gt;について。&lt;br&gt;
&lt;code&gt;px&lt;/code&gt;指定はブラウザのデフォルトフォントサイズの影響を受けないが&lt;code&gt;rem&lt;/code&gt;は影響を受ける。&lt;br&gt;
使う場所による違い、デフォルトフォントサイズを大きくして確認する方法、ルートのフォントサイズを小さくする問題についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blog-layouts-rfc-next-js&quot;&gt;Blog - Layouts RFC | Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nextjs.org/blog/layouts-rfc&quot; title=&quot;Blog - Layouts RFC | Next.js&quot;&gt;nextjs.org/blog/layouts-rfc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.jsの新しいLayout RFCを解説する記事。&lt;br&gt;
&lt;code&gt;app/&lt;/code&gt;というディレクトリでopt-inする形となり、&lt;code&gt;layout.js&lt;/code&gt;と&lt;code&gt;page.js&lt;/code&gt;というファイル名の命名規則使ったルーティングとレイアウトの仕組みについて。&lt;br&gt;
また、この新しいLayout RFCではReact Server Componentsがデフォルトとなることについてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vercel/next.js/discussions/37136&quot; title=&quot;RFC: Layouts · Discussion #37136 · vercel/next.js&quot;&gt;RFC: Layouts · Discussion #37136 · vercel/next.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-at-i-o-2022-youtube&quot;&gt;Web at I/O 2022 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcIDKuCU73tmdRN_-mI3tKFPD&quot; title=&quot;Web at I/O 2022 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLNYkxOF6rcIDKuCU73tmdRN_-mI3tKFPD&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Conference&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Google I/O 2022のWeb関係の動画まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;playwright-1-22-component-tests-preview-overview-youtube&quot;&gt;Playwright 1.22: Component Tests (preview) Overview - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=y3YxX4sFJbM&quot; title=&quot;Playwright 1.22: Component Tests (preview) Overview - YouTube&quot;&gt;www.youtube.com/watch?v&amp;#x3D;y3YxX4sFJbM&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;playwright&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Playwright v1.22で試験的に実装されたComponent Tests機能の解説動画。&lt;br&gt;
どのような仕組みでブラウザにコンポーネントをmountしているか、コンポーネントのテスト実行、デバッガーとの連携、キーボード入力やスクリーンショットの撮影などについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/playwright/releases/tag/v1.22.0&quot; title=&quot;Release v1.22.0 · microsoft/playwright&quot;&gt;Release v1.22.0 · microsoft/playwright&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;markdoc-markdoc-a-powerful-flexible-markdown-based-authoring-framework&quot;&gt;markdoc/markdoc: A powerful, flexible, Markdown-based authoring framework.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/markdoc/markdoc&quot; title=&quot;markdoc/markdoc: A powerful, flexible, Markdown-based authoring framework.&quot;&gt;github.com/markdoc/markdoc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Markdown&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Markdownベースのドキュメントオーサリングライブラリ。&lt;br&gt;
パーサ、バリデーション、カスタムタグなどを拡張に対応している。&lt;br&gt;
markdown-itのtokenize結果をもとにASTを組み立て、それをレンダリングするRendererを持つ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;honojs-hono-ultrafast-web-framework-for-cloudflare-workers-fast-but-not-only-fast&quot;&gt;honojs/hono: Ultrafast web framework for Cloudflare Workers. Fast, but not only fast.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/honojs/hono&quot; title=&quot;honojs/hono: Ultrafast web framework for Cloudflare Workers. Fast, but not only fast.&quot;&gt;github.com/honojs/hono&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;cloudflare&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare Workers向けのルーティングライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 24 May 2022 12:06:17 +0900</pubDate>
        <link>https://jser.info/2022/05/24/deno-1.22-storybook-6.5webpack-lazy-compilation-next.js-layouts-rfc/</link>
        <guid isPermaLink="true">https://jser.info/2022/05/24/deno-1.22-storybook-6.5webpack-lazy-compilation-next.js-layouts-rfc/</guid>
        
        <category>video</category>
        
        <category>Tools</category>
        
        <category>browser</category>
        
        <category>testing</category>
        
        <category>google</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2022-05-17のJS: Solid v1.4.0、playwright v1.22.0、Safari 15.5</title>
        <description>&lt;p&gt;JSer.info #592 - Solid 1.4.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/solidjs/solid/releases/tag/v1.4.0&quot;&gt;Release v1.4.0 - Level Up! · solidjs/solid&lt;/a&gt;
Solid v1.4.0リリース。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;createStore&lt;/code&gt;でトップレベルの配列をサポート、&lt;code&gt;deferStream&lt;/code&gt;オプションの追加、&lt;code&gt;createResource&lt;/code&gt;で常に最新の値を取得する&lt;code&gt;.latest&lt;/code&gt;プロパティが追加されています。&lt;br&gt;
また、Custom Renderersを複数組み合わせて利用できるようになっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;playwright v1.22.0リリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/playwright/releases/tag/v1.22.0&quot;&gt;Release v1.22.0 · microsoft/playwright&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Playwright TestにComponent Testingを試験的に実装されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://playwright.dev/docs/test-components&quot;&gt;Experimental: components | Playwright&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WAI-ARIA roleなどで要素を選択できるRole selectorの対応。&lt;br&gt;
またScreenshot Assertionの安定性のために、&lt;code&gt;expect(page).toHaveScreenshot()&lt;/code&gt;でスクリーンショットを撮影する際にはデフォルトでアニメーションの無効化などの変更するといった含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Safari 15.5がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/12669/new-webkit-features-in-safari-15-5/&quot;&gt;New WebKit Features in Safari 15.5 | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/12445/new-webkit-features-in-safari-15-4/&quot;&gt;Safari 15.4&lt;/a&gt;は機能追加が中心でしたが、Safari 15.5はバグ修正が中心となっています。&lt;/p&gt;

&lt;p&gt;HTMLの&lt;code&gt;inert&lt;/code&gt;属性のサポート、CSPで&lt;code&gt;worker-src&lt;/code&gt;ディレクティブのサポートが追加されています。&lt;br&gt;
バグ修正としては&lt;code&gt;background-attachement: fixed&lt;/code&gt;のバグ修正、&lt;code&gt;position: sticky&lt;/code&gt;のバグ修正、HLS再生時のバグ修正、WebGLのmultisamplingのバグ修正などが含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v8-10-0-npm-cli&quot;&gt;Release v8.10.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v8.10.0&quot; title=&quot;Release v8.10.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v8.10.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm v8.10.0リリース。&lt;br&gt;
&lt;code&gt;--omit-lockfile-registry-resolved&lt;/code&gt;フラグの追加。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;improving-the-http-archive-pipeline-and-dataset-by-10x-announcements-http-archive&quot;&gt;Improving the HTTP Archive pipeline and dataset by 10x - Announcements - HTTP Archive&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://discuss.httparchive.org/t/improving-the-http-archive-pipeline-and-dataset-by-10x/2372&quot; title=&quot;Improving the HTTP Archive pipeline and dataset by 10x - Announcements - HTTP Archive&quot;&gt;discuss.httparchive.org/t/improving-the-http-archive-pipeline-and-dataset-by-10x/2372&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;BigQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTTP Archiveのアーキテクチャが変更され、データセットが10倍となるというアナウンス。&lt;br&gt;
データ量が増えるためBigQueryのクエリ費用も増える可能性がある。またホームページからセカンダリページのクロールにも対応していく予定。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-16-x-runtime-now-available-in-aws-lambda-aws-compute-blog&quot;&gt;Node.js 16.x runtime now available in AWS Lambda | AWS Compute Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/jp/blogs/compute/node-js-16-x-runtime-now-available-in-aws-lambda/&quot; title=&quot;Node.js 16.x runtime now available in AWS Lambda | AWS Compute Blog&quot;&gt;aws.amazon.com/jp/blogs/compute/node-js-16-x-runtime-now-available-in-aws-lambda/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AWS LambdaでNode.js 16が利用できるようになった&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-7-rc-typescript&quot;&gt;Announcing TypeScript 4.7 RC - TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-7-rc/&quot; title=&quot;Announcing TypeScript 4.7 RC - TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-7-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.7 RCリリース。&lt;br&gt;
Betaからの変更として、Node.jsはEOLとなったため、&lt;code&gt;target&lt;/code&gt;の指定は&lt;code&gt;node16&lt;/code&gt;へと変更された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-7-beta/&quot; title=&quot;Announcing TypeScript 4.7 Beta - TypeScript&quot;&gt;Announcing TypeScript 4.7 Beta - TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-4-0-level-up-solidjs-solid&quot;&gt;Release v1.4.0 - Level Up! · solidjs/solid&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/solidjs/solid/releases/tag/v1.4.0&quot; title=&quot;Release v1.4.0 - Level Up! · solidjs/solid&quot;&gt;github.com/solidjs/solid/releases/tag/v1.4.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Solid v1.4.0リリース。&lt;br&gt;
&lt;code&gt;createStore&lt;/code&gt;でトップレベルの配列をサポート、&lt;code&gt;deferStream&lt;/code&gt;オプションの追加、&lt;code&gt;createResource&lt;/code&gt;で常に最新の値を取得する&lt;code&gt;.latest&lt;/code&gt;プロパティを追加。&lt;br&gt;
また、Custom Renderersを複数組み合わせて利用できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-1-0-pnpm-pnpm&quot;&gt;Release v7.1.0 · pnpm/pnpm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pnpm/pnpm/releases/tag/v7.1.0&quot; title=&quot;Release v7.1.0 · pnpm/pnpm&quot;&gt;github.com/pnpm/pnpm/releases/tag/v7.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;pnpm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;pnpm v7.1.0リリース。&lt;br&gt;
&lt;code&gt;package.json&lt;/code&gt;の&lt;code&gt;libc&lt;/code&gt;フィールドのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-22-0-microsoft-playwright&quot;&gt;Release v1.22.0 · microsoft/playwright&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/playwright/releases/tag/v1.22.0&quot; title=&quot;Release v1.22.0 · microsoft/playwright&quot;&gt;github.com/microsoft/playwright/releases/tag/v1.22.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;playwright v1.22.0リリース。&lt;br&gt;
Playwright TestにComponent Testingを試験的に実装、WAI-ARIA roleなどで要素を選択できるRole selectorの対応。&lt;br&gt;
またScreenshot Assertionの安定性のためにデフォルトではアニメーションの無効化などの変更が含まれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-145-webkit&quot;&gt;Release Notes for Safari Technology Preview 145 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/12629/release-notes-for-safari-technology-preview-145/&quot; title=&quot;Release Notes for Safari Technology Preview 145 | WebKit&quot;&gt;webkit.org/blog/12629/release-notes-for-safari-technology-preview-145/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 145リリース。&lt;br&gt;
Container Queriesのサポート改善、&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;要素のダークモード対応、&lt;code&gt;setTimeout(fn, 0)&lt;/code&gt;とした時に自動的に追加される1msのclampを削除。&lt;br&gt;
Service Workersに&lt;code&gt;WindowClient.navigate()&lt;/code&gt;と&lt;code&gt;WindowClient.openWindow()&lt;/code&gt;の実装など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-webkit-features-in-safari-15-5-webkit&quot;&gt;New WebKit Features in Safari 15.5 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/12669/new-webkit-features-in-safari-15-5/&quot; title=&quot;New WebKit Features in Safari 15.5 | WebKit&quot;&gt;webkit.org/blog/12669/new-webkit-features-in-safari-15-5/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari 15.5リリース。&lt;br&gt;
HTMLの&lt;code&gt;inert&lt;/code&gt;属性のサポート、CSPで&lt;code&gt;worker-src&lt;/code&gt;ディレクティブのサポート。&lt;br&gt;
その他には&lt;code&gt;background-attachement: fixed&lt;/code&gt;のバグ修正、&lt;code&gt;position: sticky&lt;/code&gt;のバグ修正、HLS再生時のバグ修正、WebGLのmultisamplingのバグ修正など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/documentation/safari-release-notes/safari-15_5-release-notes&quot; title=&quot;Safari 15.5 Beta Release Notes | Apple Developer Documentation&quot;&gt;Safari 15.5 Beta Release Notes | Apple Developer Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://forum.unity.com/threads/ios-15-webgl-2-issue.1176116/page-2&quot; title=&quot;iOS 15 + WebGL 2 issue | Page 2 - Unity Forum&quot;&gt;iOS 15 + WebGL 2 issue | Page 2 - Unity Forum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;meta-open-source-is-transferring-jest-to-the-openjs-foundation&quot;&gt;Meta Open Source is transferring Jest to the OpenJS Foundation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://engineering.fb.com/2022/05/11/open-source/jest-openjs-foundation/&quot; title=&quot;Meta Open Source is transferring Jest to the OpenJS Foundation&quot;&gt;engineering.fb.com/2022/05/11/open-source/jest-openjs-foundation/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;OpenSource&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JestがOpenJS Foundationに移管される。&lt;br&gt;
Meta社以外の人のContributionsが多くなったため。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://openjsf.org/blog/2022/05/11/openjs-foundation-welcomes-jest/&quot; title=&quot;Jest Project Moves to OpenJS Foundation with Meta Open Source Contribution - OpenJS Foundation&quot;&gt;Jest Project Moves to OpenJS Foundation with Meta Open Source Contribution - OpenJS Foundation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-google&quot;&gt;Webフロントエンド基礎研修 ~歴史から学ぶ、現場のスタンダードな開発~ - Google スライド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vSjF1cp8fAdMKwFkLmtFT66e-UCD6zanO5KLsuRFmWyZ-8c06YQmgWT750Aqai2JfqHRARYWlkDLfaB/pub#slide=id.gb7224c087c_0_0&quot; title=&quot;Webフロントエンド基礎研修 ~歴史から学ぶ、現場のスタンダードな開発~ - Google スライド&quot;&gt;docs.google.com/presentation/d/e/2PACX-1vSjF1cp8fAdMKwFkLmtFT66e-UCD6zanO5KLsuRFmWyZ-8c06YQmgWT750Aqai2JfqHRARYWlkDLfaB/pub#slide&amp;#x3D;id.gb7224c087c_0_0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SPA、React、TypeScript、SSR、CDNについての導入的なスライド。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;at-tfconf-speaker-deck&quot;&gt;バンドル最適化マニアクス at tfconf - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/mizchi/bandoruzui-shi-hua-maniakusu-at-tfconf&quot; title=&quot;バンドル最適化マニアクス at tfconf - Speaker Deck&quot;&gt;speakerdeck.com/mizchi/bandoruzui-shi-hua-maniakusu-at-tfconf&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TreeShakingとDead Code Eliminationについてスライド。&lt;br&gt;
Bundler(rollup)とMinifier(terser)がどのように定数展開や不要なコードを削除しているのかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascriptdb&quot;&gt;JavascriptDB&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://javascriptdb.com/&quot; title=&quot;JavascriptDB&quot;&gt;javascriptdb.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SQLite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SQLiteを使ったORM的な要素が入ったJavaScript DB。&lt;br&gt;
データを配列やオブジェクトとして読み書きでき、filterやpushなどのAPIがそのままDBの読み書きとなる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;i-net-software-jwebassembly-java-bytecode-to-webassembly-compiler&quot;&gt;i-net-software/JWebAssembly: Java bytecode to WebAssembly compiler&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/i-net-software/JWebAssembly&quot; title=&quot;i-net-software/JWebAssembly: Java bytecode to WebAssembly compiler&quot;&gt;github.com/i-net-software/JWebAssembly&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Java bytecodeをWebAssemblyにコンパイルするコンパイラー。&lt;br&gt;
Javaをブラウザで実行する目的&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wooorm-starry-night-syntax-highlighting-like-github&quot;&gt;wooorm/starry-night: Syntax highlighting, like GitHub&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wooorm/starry-night&quot; title=&quot;wooorm/starry-night: Syntax highlighting, like GitHub&quot;&gt;github.com/wooorm/starry-night&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;textmate構文をサポートしたSyntax highlighterライブラリ。&lt;br&gt;
github/linguistの定義などを利用して、ファイルサイズは大きいがGitHubやエディタと同じようなハイライトを作成する目的&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dflex-js-dflex-the-sophisticated-drag-and-drop-library-youve-been-waiting-for&quot;&gt;dflex-js/dflex: The sophisticated Drag and Drop library you&amp;#039;ve been waiting for 🥳&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dflex-js/dflex&quot; title=&quot;dflex-js/dflex: The sophisticated Drag and Drop library you&amp;amp;#039;ve been waiting for 🥳&quot;&gt;github.com/dflex-js/dflex&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;UIフレームワークに依存しないD&amp;amp;Dライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;alan2207-bulletproof-react-a-simple-scalable-and-powerful-architecture-for-building-production-ready-react-applications&quot;&gt;alan2207/bulletproof-react: 🛡️ ⚛️ A simple, scalable, and powerful architecture for building production ready React applications.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alan2207/bulletproof-react&quot; title=&quot;alan2207/bulletproof-react: 🛡️ ⚛️ A simple, scalable, and powerful architecture for building production ready React applications.&quot;&gt;github.com/alan2207/bulletproof-react&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;architecture&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactアプリケーションに関するアーキテクチャガイド。&lt;br&gt;
プロジェクト構成、スタイル、ディレクトリ構造、コンポーネント、状態管理、テスト、エラー処理、セキュリティ、パフォーマンスなどについてのプラクティスをまとめたもの&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;esbuild-kit-tsx-node-js-runtime-enhanced-with-esbuild-for-loading-typescript-esm&quot;&gt;esbuild-kit/tsx: Node.js runtime enhanced with esbuild for loading TypeScript &amp;amp; ESM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/esbuild-kit/tsx&quot; title=&quot;esbuild-kit/tsx: Node.js runtime enhanced with esbuild for loading TypeScript &amp;amp;amp; ESM&quot;&gt;github.com/esbuild-kit/tsx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuildを使ってTypeScript変換しながら実行するツール。&lt;br&gt;
ESMとCJSをそれぞれ扱うloaderを持っていて、package.jsonの&lt;code&gt;type&lt;/code&gt;フィールドによって自動でloaderを切り換えて扱える&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 17 May 2022 07:08:06 +0900</pubDate>
        <link>https://jser.info/2022/05/17/solid-v1.4.0-playwright-v1.22.0-safari-15.5/</link>
        <guid isPermaLink="true">https://jser.info/2022/05/17/solid-v1.4.0-playwright-v1.22.0-safari-15.5/</guid>
        
        <category>TypeScript</category>
        
        <category>testing</category>
        
        <category>safari</category>
        
        <category>slide</category>
        
        <category>SQLite</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2022-05-11のJS: Node v18.1.0(node --test)、State of CSS 2022、Performance insights</title>
        <description>&lt;p&gt;JSer.info #591 - Node.js 18.1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v18.1.0/&quot;&gt;Node v18.1.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fetchが実装されたため&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;と&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;が実装されています。&lt;br&gt;
また、&lt;code&gt;node:test&lt;/code&gt;を使ったテストを実行する&lt;code&gt;node --test&lt;/code&gt;フラグが追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/ringtail003/items/5fda350bb273bab7e1c9&quot;&gt;Node 18 に Test Runner なるものがあったので試してみた（Experimental） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/state-of-css-2022/&quot;&gt;State of CSS 2022&lt;/a&gt;という記事では、モダンブラウザで実装され2022年に利用できそうな機能と現在策定や実装が進められている機能がまとめられています。&lt;/p&gt;

&lt;p&gt;CSS Layers、CSS Subgrid、&lt;code&gt;@container&lt;/code&gt;、&lt;code&gt;@scope&lt;/code&gt;、&lt;code&gt;@nest&lt;/code&gt;などかなり多くの機能が紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;次の記事と動画では、Chrome 102から導入されるPerformance insightsという新しい開発者ツールについて紹介されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/docs/devtools/performance-insights/&quot;&gt;Performance insights: Get actionable insights on your website&amp;#39;s performance - Chrome Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5PFmGeCZDvw&quot;&gt;Performance insights panel | DevTools Tips - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現在のPerformanceタブは情報量が多すぎるため、これを整理して表示したりLighthouseのように修正方法のフィードバックを表示する目的を持った新しいパネルになっています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v18-1-0-current-node-js&quot;&gt;Node v18.1.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v18.1.0/&quot; title=&quot;Node v18.1.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v18.1.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 18.1.0リリース。&lt;br&gt;
&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;と&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;の実装。&lt;br&gt;
&lt;code&gt;node:test&lt;/code&gt;を使ったテストを実行する&lt;code&gt;node --test&lt;/code&gt;フラグの追加&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcement-passing-the-torch-issue-3121-lerna-lerna&quot;&gt;Announcement: Passing the torch · Issue #3121 · lerna/lerna&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lerna/lerna/issues/3121&quot; title=&quot;Announcement: Passing the torch · Issue #3121 · lerna/lerna&quot;&gt;github.com/lerna/lerna/issues/3121&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;monorepo&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;lernaのメンテナンスはNxを開発してるNrwlが引き継ぐとアナウンスされた。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babylon-js-5-0-beyond-the-stars-our-mission-is-to-create-one-of-the-by-babylon-js-may-2022-medium&quot;&gt;Babylon.js 5.0: Beyond the Stars. Our mission is to create one of the… | by Babylon.js | May, 2022 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babylonjs.medium.com/babylon-js-5-0-beyond-the-stars-2d11d4c3d07&quot; title=&quot;Babylon.js 5.0: Beyond the Stars. Our mission is to create one of the… | by Babylon.js | May, 2022 | Medium&quot;&gt;babylonjs.medium.com/babylon-js-5-0-beyond-the-stars-2d11d4c3d07&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGPU&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babylon.js 5.0リリース。&lt;br&gt;
WebGPUのサポート、Animation Curve Editorのサポート、Performance Profilerの刷新、GUI Editorのベータサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wintercg&quot;&gt;WinterCG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://wintercg.org/&quot; title=&quot;WinterCG&quot;&gt;wintercg.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cloudflare&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;community&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;サーバやCDN Edge RuntimeのAPI標準化についてのワーキンググループ。&lt;br&gt;
Deno、Cloudflare、Vercel、Node.jsが参加している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.cloudflare.com/introducing-the-wintercg/&quot; title=&quot;A Community Group for Web-interoperable JavaScript runtimes&quot;&gt;A Community Group for Web-interoperable JavaScript runtimes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.com/blog/announcing-wintercg&quot; title=&quot;Announcing the Web-interoperable Runtimes Community Group&quot;&gt;Announcing the Web-interoperable Runtimes Community Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-14-0-0-puppeteer-puppeteer&quot;&gt;Release 14.0.0 · puppeteer/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/puppeteer/puppeteer/releases/tag/v14.0.0&quot; title=&quot;Release 14.0.0 · puppeteer/puppeteer&quot;&gt;github.com/puppeteer/puppeteer/releases/tag/v14.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;puppeteer&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteer v14.0.0リリース。&lt;br&gt;
Node.js 12のサポート終了。&lt;br&gt;
M1 Mac向けのChromiumをダウンロードする&lt;code&gt;PUPPETEER_EXPERIMENTAL_CHROMIUM_MAC_ARM=1&lt;/code&gt;フラグの追加、ESMのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-22-19-yarnpkg-yarn&quot;&gt;Release v1.22.19 · yarnpkg/yarn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yarnpkg/yarn/releases/tag/v1.22.19&quot; title=&quot;Release v1.22.19 · yarnpkg/yarn&quot;&gt;github.com/yarnpkg/yarn/releases/tag/v1.22.19&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;yarn v1.22.19リリース。&lt;br&gt;
npmのWebAuthn対応との互換性を修正&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.blog/2022-05-10-enhanced-2fa-experience-for-your-npm-account/&quot; title=&quot;Enhanced 2FA experience for your npm account | The GitHub Blog&quot;&gt;Enhanced 2FA experience for your npm account | The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wrangler-2-0-a-new-developer-experience-for-cloudflare-workers&quot;&gt;wrangler 2.0 — a new developer experience for Cloudflare Workers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cloudflare.com/wrangler-v2-beta/&quot; title=&quot;wrangler 2.0 — a new developer experience for Cloudflare Workers&quot;&gt;blog.cloudflare.com/wrangler-v2-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;cloudflare&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare WorkersのCLIであるwrangler 2.0がリリース。&lt;br&gt;
&lt;code&gt;wrangler.toml&lt;/code&gt;の設定ファイルなしでも動作するように、&lt;code&gt;--local&lt;/code&gt;でminiflareを使ってローカルでのエミュレートに対応、&lt;code&gt;wrangler dev&lt;/code&gt;でのデバッグの対応など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.cloudflare.com/10-things-i-love-about-wrangler/&quot; title=&quot;10 things I love about Wrangler v2.0&quot;&gt;10 things I love about Wrangler v2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-2-0-support-of-yarn-pnpm-workspace-protocol-ghiscoding-lerna-lite&quot;&gt;Release v1.2.0 - support of yarn/pnpm `workspace:` protocol · ghiscoding/lerna-lite&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ghiscoding/lerna-lite/releases/tag/v1.2.0&quot; title=&quot;Release v1.2.0 - support of yarn/pnpm \`workspace:\` protocol · ghiscoding/lerna-lite&quot;&gt;github.com/ghiscoding/lerna-lite/releases/tag/v1.2.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;monorepo&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;lerna-lite v1.2.0リリース。&lt;br&gt;
&lt;code&gt;workspace:&lt;/code&gt; protocolのサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-typescript-4-7-module-by-yosuke-kurami-may-2022-medium&quot;&gt;TypeScript におけるモジュール関連オプションの整理. TypeScript 4.7 で “module” という名前で始まる… | by Yosuke Kurami | May, 2022 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://quramy.medium.com/typescript-%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E9%96%A2%E9%80%A3%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E6%95%B4%E7%90%86-efdf860a7c4&quot; title=&quot;TypeScript におけるモジュール関連オプションの整理. TypeScript 4.7 で “module” という名前で始まる… | by Yosuke Kurami | May, 2022 | Medium&quot;&gt;quramy.medium.com/typescript-%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E9%96%A2%E9%80%A3%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E6%95%B4%E7%90%86-efdf860a7c4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのモジュール周りのオプションについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-insights-get-actionable-insights-on-your-websites-performance-chrome-developers&quot;&gt;Performance insights: Get actionable insights on your website&amp;#039;s performance - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/docs/devtools/performance-insights/&quot; title=&quot;Performance insights: Get actionable insights on your website&amp;amp;#039;s performance - Chrome Developers&quot;&gt;developer.chrome.com/docs/devtools/performance-insights/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 102でDevToolsに導入されるPerformance insightsパネルについて。&lt;br&gt;
パフォーマンスとWeb Vitalsに関連する内容を整理して表示するパネル。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5PFmGeCZDvw&quot; title=&quot;Performance insights panel | DevTools Tips - YouTube&quot;&gt;Performance insights panel | DevTools Tips - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;state-of-css-2022&quot;&gt;State of CSS 2022&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/state-of-css-2022/&quot; title=&quot;State of CSS 2022&quot;&gt;web.dev/state-of-css-2022/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2022年にモダンブラウザがサポートして利用できるようになるCSSと今後利用できるようになるCSSについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-developers&quot;&gt;プライバシーサンドボックス - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/ja/docs/privacy-sandbox/&quot; title=&quot;プライバシーサンドボックス - Chrome Developers&quot;&gt;developer.chrome.com/ja/docs/privacy-sandbox/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;privacy&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;translate&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Privacy Sandboxについての翻訳まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;primitives-radix-ui&quot;&gt;Primitives – Radix UI&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.radix-ui.com/&quot; title=&quot;Primitives – Radix UI&quot;&gt;www.radix-ui.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React向けのUIフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kawamataryo-suppress-ts-errors-cli-tool-to-add-comments-to-suppress-type-errors-in-typescript&quot;&gt;kawamataryo/suppress-ts-errors: CLI tool to add comments to suppress type errors in TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kawamataryo/suppress-ts-errors&quot; title=&quot;kawamataryo/suppress-ts-errors: CLI tool to add comments to suppress type errors in TypeScript&quot;&gt;github.com/kawamataryo/suppress-ts-errors&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptでコンパイルエラーとなる箇所に&lt;code&gt;@ts-expect-error&lt;/code&gt;を追加できるツール。&lt;br&gt;
&lt;code&gt;strict: true&lt;/code&gt;への移行時などに暫定的に型エラーを無視するためのツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/ryo_kawamata/articles/suppress-ts-errors&quot; title=&quot;TypeScriptを&amp;amp;amp;amp;quot;strict: true&amp;amp;amp;amp;quot;で使いたい全ての人へ〜suppress-ts-errorsの紹介&quot;&gt;TypeScriptを&amp;amp;quot;strict: true&amp;amp;quot;で使いたい全ての人へ〜suppress-ts-errorsの紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;httptoolkit-mockrtc-powerful-friendly-webrtc-mock-peer-proxy&quot;&gt;httptoolkit/mockrtc: Powerful friendly WebRTC mock peer &amp;amp; proxy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/httptoolkit/mockrtc&quot; title=&quot;httptoolkit/mockrtc: Powerful friendly WebRTC mock peer &amp;amp;amp; proxy&quot;&gt;github.com/httptoolkit/mockrtc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proxy&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebRTCのモックサーバ、Proxy、テストライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yisibl-resvg-js-a-high-performance-svg-renderer-and-toolkit-powered-by-rust-based-resvg-and-napi-rs&quot;&gt;yisibl/resvg-js: A high-performance SVG renderer and toolkit, powered by Rust based resvg and napi-rs.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yisibl/resvg-js&quot; title=&quot;yisibl/resvg-js: A high-performance SVG renderer and toolkit, powered by Rust based resvg and napi-rs.&quot;&gt;github.com/yisibl/resvg-js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rust製のresvgベースのSVGライブラリ。&lt;br&gt;
Node.js向けのNative ModulesとWebAssembly版が用意されている。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 11 May 2022 23:32:25 +0900</pubDate>
        <link>https://jser.info/2022/05/11/node-v18.1.0node-test-state-of-css-2022-performance-insights/</link>
        <guid isPermaLink="true">https://jser.info/2022/05/11/node-v18.1.0node-test-state-of-css-2022-performance-insights/</guid>
        
        <category>Tools</category>
        
        <category>Chrome</category>
        
        <category>node.js</category>
        
        <category>monorepo</category>
        
        <category>TypeScript</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2022-05-03のJS: Node.js 12はEOLとなりサポート終了、pnpm v7.0.0、Mocha v10.0.0、Cypress 9.6.0</title>
        <description>&lt;p&gt;JSer.info #590 - pnpm 7.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pnpm/pnpm/releases/tag/v7.0.0&quot;&gt;Release v7.0.0 · pnpm/pnpm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;コマンドラインフラグの変更やデフォルト値の変更などの破壊的な変更が中心となっています。&lt;/p&gt;

&lt;p&gt;Node.js 12のサポート終了、root packageは&lt;code&gt;pnpm -r exec&lt;/code&gt;などの対象からデフォルトで除外するように変更。&lt;code&gt;--filter&lt;/code&gt;がglobをサポート、&lt;code&gt;@types/*&lt;/code&gt;を自動的にhoistしないようになるといった変更が含まれています。&lt;/p&gt;

&lt;p&gt;その他には、&lt;a href=&quot;https://pnpm.io/npmrc#strict-peer-dependencies&quot;&gt;&lt;code&gt;strict-peer-dependencies&lt;/code&gt;&lt;/a&gt;がデフォルトで有効となる変更も含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Mocha 10.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/releases/tag/v10.0.0&quot;&gt;Release v10.0.0 · mochajs/mocha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こちらもサポート終了した機能を削除するといった破壊的な変更が中心となっています。&lt;/p&gt;

&lt;p&gt;Node.js 12のサポート終了、IE11のサポート終了、AMD/RequireJSのサポート終了、Growlサポートの終了、&lt;code&gt;bin/mocha&lt;/code&gt;を&lt;code&gt;bin/mocha.js&lt;/code&gt;にリネームするといった変更が含まれます。&lt;/p&gt;

&lt;p&gt;pnpmとMochaどちらもNode.js 12のサポートを終了していますが、これはNode.js 12が2022-04-30でEOL(End of Life)となり公式のサポートがなくなったためです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/about/releases/&quot;&gt;Releases | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Cypress 9.6.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cypress.io/blog/2022/04/25/cypress-9-6-0-easily-test-multi-domain-workflows-with-cy-origin/&quot;&gt;Cypress 9.6.0: Easily test multi-domain workflows with cy.origin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/releases/tag/v9.6.0&quot;&gt;Release 9.6.0 · cypress-io/cypress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cypressはブラウザ内でテストを実行するため、ログイン画面が別ドメインである場合などのマルチドメインに関わるテストはSame Origin Policyで上手く行かないケースがありました。&lt;br&gt;
これを解決するために&lt;code&gt;cy.origin&lt;/code&gt; APIがフラグ付きで実装されています。&lt;/p&gt;

&lt;p&gt;詳しい仕組みや制限については記事や動画で解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Fohrq5GZSD8&quot;&gt;How to test multiple domains or origins with Cypress - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-4-18-0-expressjs-express&quot;&gt;Release 4.18.0 · expressjs/express&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/expressjs/express/releases/tag/4.18.0&quot; title=&quot;Release 4.18.0 · expressjs/express&quot;&gt;github.com/expressjs/express/releases/tag/4.18.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;express 4.18.0リリース。&lt;br&gt;
&lt;code&gt;res.download&lt;/code&gt;に&lt;code&gt;root&lt;/code&gt;オプションの追加、cookieに&lt;code&gt;priority&lt;/code&gt;オプションの追加。&lt;br&gt;
また、&lt;code&gt;res.status&lt;/code&gt;にNumber以外を渡すケースををDeprecatedに変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-102-window-controls-overlay-a-host-of-finished-origin-trials-pwas-as-file-handlers-and-more&quot;&gt;Chromium Blog: Chrome 102: Window Controls Overlay, a Host of Finished Origin Trials, PWAs as File Handlers and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2022/04/chrome-102-window-controls-overlay-host.html&quot; title=&quot;Chromium Blog: Chrome 102: Window Controls Overlay, a Host of Finished Origin Trials, PWAs as File Handlers and More&quot;&gt;blog.chromium.org/2022/04/chrome-102-window-controls-overlay-host.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 102 betaリリース。&lt;br&gt;
Window Controls Overlay、&lt;code&gt;inert&lt;/code&gt;属性、Navigation API、&lt;code&gt;hidden=until-found&lt;/code&gt;のサポート。&lt;br&gt;
Origin Private File System extension(OPFS)のAccessHandle APIのサポート。&lt;br&gt;
WebHIDに&lt;code&gt;exclusionFilters&lt;/code&gt;オプションの追加、Private IPへのサブリソースリクエスト時にPreflightの発生と警告が出るように、WebRTCのSDP Plan Bを削除。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;remotion-3-0-remotion&quot;&gt;Remotion 3.0 | Remotion&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.remotion.dev/blog/3-0&quot; title=&quot;Remotion 3.0 | Remotion&quot;&gt;www.remotion.dev/blog/3-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactで動画を作成するRemotion 3.0リリース。&lt;br&gt;
エンコーディングのパフォーマンス改善、動画をレンダリングできる&lt;code&gt;renderMedia&lt;/code&gt; API、エラー表示の改善、React 18のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-18-1-0-april-26-2022-facebook-react&quot;&gt;Release 18.1.0 (April 26, 2022) · facebook/react&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/react/releases/tag/v18.1.0&quot; title=&quot;Release 18.1.0 (April 26, 2022) · facebook/react&quot;&gt;github.com/facebook/react/releases/tag/v18.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React v18.1.0リリース。&lt;br&gt;
バグ修正が主な変更。&lt;br&gt;
&lt;code&gt;use-subscription&lt;/code&gt;のshimの実装が&lt;code&gt;use-sync-external-store&lt;/code&gt;をラップしただけの実装へと変更された。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-0-0-pnpm-pnpm&quot;&gt;Release v7.0.0 · pnpm/pnpm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pnpm/pnpm/releases/tag/v7.0.0&quot; title=&quot;Release v7.0.0 · pnpm/pnpm&quot;&gt;github.com/pnpm/pnpm/releases/tag/v7.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;pnpm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;pnpm v7.0.0リリース。&lt;br&gt;
Node.js 12のサポート終了、root packageは&lt;code&gt;pnpm -r exec&lt;/code&gt;などの対象からデフォルトで除外するように変更。&lt;code&gt;--filter&lt;/code&gt;がglobをサポート、&lt;code&gt;@types/*&lt;/code&gt;を自動的にhoistしないようになるなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3-0-0-capricorn86-happy-dom&quot;&gt;Release v3.0.0 · capricorn86/happy-dom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/capricorn86/happy-dom/releases/tag/v3.0.0&quot; title=&quot;Release v3.0.0 · capricorn86/happy-dom&quot;&gt;github.com/capricorn86/happy-dom/releases/tag/v3.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Happy DOM 3.0.0リリース。&lt;br&gt;
TargetをES5からES2022に変更、WindowをVM contextとなるように変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v8-8-0-npm-cli&quot;&gt;Release v8.8.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v8.8.0&quot; title=&quot;Release v8.8.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v8.8.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm v8.8.0リリース。&lt;br&gt;
&lt;code&gt;file:&lt;/code&gt;で指定されたプロジェクト外への依存をsymlinkではなくコピーでインストールできる&lt;code&gt;--install-links&lt;/code&gt;フラグが追加された。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cypress-9-6-0-easily-test-multi-domain-workflows-with-cy-origin&quot;&gt;Cypress 9.6.0: Easily test multi-domain workflows with cy.origin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cypress.io/blog/2022/04/25/cypress-9-6-0-easily-test-multi-domain-workflows-with-cy-origin/&quot; title=&quot;Cypress 9.6.0: Easily test multi-domain workflows with cy.origin&quot;&gt;cypress.io/blog/2022/04/25/cypress-9-6-0-easily-test-multi-domain-workflows-with-cy-origin/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cypress 9.6.0リリース。&lt;br&gt;
Cypressはブラウザ内でテストを実行するためマルチドメインに関わるテストはSame Origin Policyで上手く行かないケースがあった。&lt;br&gt;
これを解決するために&lt;code&gt;cy.origin&lt;/code&gt; APIがフラグ付きで実装された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/releases/tag/v9.6.0&quot; title=&quot;Release 9.6.0 · cypress-io/cypress&quot;&gt;Release 9.6.0 · cypress-io/cypress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v10-0-0-mochajs-mocha&quot;&gt;Release v10.0.0 · mochajs/mocha&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/releases/tag/v10.0.0&quot; title=&quot;Release v10.0.0 · mochajs/mocha&quot;&gt;github.com/mochajs/mocha/releases/tag/v10.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Mocha v10.0.0リリース。&lt;br&gt;
Node.js 12のサポート終了、IE11のサポート終了、AMD/RequireJSのサポート終了、Growlサポートの終了、&lt;code&gt;bin/mocha&lt;/code&gt;を&lt;code&gt;bin/mocha.js&lt;/code&gt;にリネームなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;non-interactive-elements-with-the-inert-attribute-webkit&quot;&gt;Non-interactive Elements with the inert attribute | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/12578/non-interactive-elements-with-the-inert-attribute/&quot; title=&quot;Non-interactive Elements with the inert attribute | WebKit&quot;&gt;webkit.org/blog/12578/non-interactive-elements-with-the-inert-attribute/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;inert&lt;/code&gt;属性についての解説記事。&lt;br&gt;
今まではfocusは&lt;code&gt;tabindex&lt;/code&gt;、クリックは&lt;code&gt;pointer-events&lt;/code&gt;、選択範囲は&lt;code&gt;user-select&lt;/code&gt;、&lt;code&gt;aria-hidden&lt;/code&gt;などの各種対応が必要だったが、まとめて不活性として設定できる属性。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tao-of-node-design-architecture-best-practices&quot;&gt;“Tao of Node - Design, Architecture &amp;amp; Best Practices” 日本語翻訳&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jqk.life/tao-of-node-japanese&quot; title=&quot;“Tao of Node - Design, Architecture &amp;amp;amp; Best Practices” 日本語翻訳&quot;&gt;jqk.life/tao-of-node-japanese&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;translate&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://alexkondov.com/tao-of-node/&quot;&gt;https://alexkondov.com/tao-of-node/&lt;/a&gt; の翻訳&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-18-introduces-prefix-only-core-modules&quot;&gt;Node.js 18 Introduces Prefix-Only Core Modules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://fusebit.io/blog/node-18-prefix-only-modules/&quot; title=&quot;Node.js 18 Introduces Prefix-Only Core Modules&quot;&gt;fusebit.io/blog/node-18-prefix-only-modules/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node:test&lt;/code&gt;のようにnode prefixを付けたコアモジュールを扱う理由についての解説記事。&lt;br&gt;
新しい名前を追加するときの対応コスト、Typosquattingのような攻撃を回避するため。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-frontend-2022&quot;&gt;The State of Frontend 2022&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tsh.io/state-of-frontend/&quot; title=&quot;The State of Frontend 2022&quot;&gt;tsh.io/state-of-frontend/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Survey&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The Software Houseによるフロントエンドに関するアンケート結果。&lt;br&gt;
フレームワーク、ライブラリ、TypeScript、SSG、ホスティング、Microfrontend、テスト、アクセシビリティ、パフォーマンス、SEOなどの各項目についてのアンケート結果が公開されている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;shuding-tilg-a-magical-react-hook-that-helps-you-debug-components&quot;&gt;shuding/tilg: A magical React Hook that helps you debug components.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/shuding/tilg&quot; title=&quot;shuding/tilg: A magical React Hook that helps you debug components.&quot;&gt;github.com/shuding/tilg&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React ComponnetのレンダリングやライフサイクルをデバッグできるHooksライブラリ。&lt;br&gt;
コンポーネントのPropsやStateの変化をログに出し、なぜ再レンダリングされたかをみれるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tdewolff-minify-go-minifiers-for-web-formats&quot;&gt;tdewolff/minify: Go minifiers for web formats&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tdewolff/minify&quot; title=&quot;tdewolff/minify: Go minifiers for web formats&quot;&gt;github.com/tdewolff/minify&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;golang&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Go言語で実装されたHTML/JSON/JS/SVG/XMLのminifyツール。&lt;br&gt;
PythonとNode.js向けのバインディングが用意されている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;frouriojs-notios&quot;&gt;frouriojs/notios&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/frouriojs/notios&quot; title=&quot;frouriojs/notios&quot;&gt;github.com/frouriojs/notios&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm run-scriptsをインタラクティブに複数実行、その実行状況やログを確認できるCUIを提供するツール。&lt;br&gt;
npm-run-allのラッパーであるため、npm-run-allと同様のコマンドも提供している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/luma/articles/nodejs-new-cli-tool-notios&quot; title=&quot;Node.jsモノレポ開発のターミナルログ混雑解消のための新作CLIツールnotiosを紹介&quot;&gt;Node.jsモノレポ開発のターミナルログ混雑解消のための新作CLIツールnotiosを紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 03 May 2022 11:23:29 +0900</pubDate>
        <link>https://jser.info/2022/05/03/node.js-12eol-pnpm-v7.0.0-mocha-v10.0.0-cypress-9.6.0/</link>
        <guid isPermaLink="true">https://jser.info/2022/05/03/node.js-12eol-pnpm-v7.0.0-mocha-v10.0.0-cypress-9.6.0/</guid>
        
        <category>node.js</category>
        
        <category>React</category>
        
        <category>debug</category>
        
        <category>HTML</category>
        
        <category>Tools</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2022-04-26のJS: Redux v4.2.0、Node.js 18、Jest 28</title>
        <description>&lt;p&gt;JSer.info #589 - Redux 4.2.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reduxjs/redux/releases/tag/v4.2.0&quot;&gt;Release v4.2.0 · reduxjs/redux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;機能的な追加はなく、&lt;code&gt;createStore&lt;/code&gt;をDeprecatedにして、&lt;code&gt;legacy_createStore&lt;/code&gt;という&lt;code&gt;createStore&lt;/code&gt;のaliasを追加する変更が含まれています。&lt;br&gt;
この変更の意図としては、Reduxのメンテナーが開発している&lt;a href=&quot;https://redux-toolkit.js.org/&quot;&gt;Redux Toolkit&lt;/a&gt;を使って欲しいという意図のようです。&lt;br&gt;
詳しくは、次のIssueとドキュメントが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reduxjs/redux/issues/4325&quot;&gt;Mark &lt;code&gt;createStore&lt;/code&gt; as deprecated · Issue #4325 · reduxjs/redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://redux.js.org/introduction/why-rtk-is-redux-today&quot;&gt;Why Redux Toolkit is How To Use Redux Today | Redux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Node.js 18がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/announcements/v18-release-announce/&quot;&gt;Node.js 18 is now available! | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/releases/tag/v18.0.0&quot;&gt;Release 2022-04-19, Version 18.0.0 (Current), @BethGriggs · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2022年10月にLTSとなる予定のメジャーバージョンです。&lt;br&gt;
&lt;code&gt;fetch&lt;/code&gt; API、Web Streams API、&lt;code&gt;Blob&lt;/code&gt;/&lt;code&gt;broadcastChannel&lt;/code&gt; APIなどウェブ標準をサポートが追加されています。&lt;br&gt;
また、&lt;code&gt;node:test&lt;/code&gt;モジュールの追加、&lt;code&gt;--node-snapshot-main&lt;/code&gt;の追加、V8 10.1へアップデートなども行われています。&lt;/p&gt;

&lt;p&gt;破壊的な変更として、&lt;code&gt;server.headersTimeout&lt;/code&gt;と&lt;code&gt;server.requestTimeout&lt;/code&gt;のデフォルト値の変更なども含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://shisama.hatenablog.com/entry/2022/04/20/011103&quot;&gt;Node.js v18 の主な変更点 - 別にしんどくないブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Jest 28がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jestjs.io/blog/2022/04/25/jest-28&quot;&gt;Jest 28: Shedding weight and improving compatibility 🫶 · Jest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/jest/blob/main/CHANGELOG.md#2800&quot;&gt;jest/CHANGELOG.md at main · facebook/jest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;テストを分割して実行できる&lt;code&gt;--shard&lt;/code&gt;オプションの追加、&lt;code&gt;exports&lt;/code&gt;フィールドの対応、fakeTimersの改善、GitHub Actionsのreporters対応などが追加されています。&lt;br&gt;
&lt;code&gt;testEnvironmentOptions&lt;/code&gt;をインラインコメントで定義できるように、&lt;code&gt;fetch&lt;/code&gt;などのグローバル対応、ESM対応の改善なども含まれています。&lt;/p&gt;

&lt;p&gt;マイグレーションガイドも合わせて公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jestjs.io/docs/upgrading-to-jest28&quot;&gt;From v27 to v28 · Jest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webassembly-2-0-first-public-working-drafts-w3c-news&quot;&gt;WebAssembly 2.0 First Public Working Drafts | W3C News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3.org/blog/news/archives/9509&quot; title=&quot;WebAssembly 2.0 First Public Working Drafts | W3C News&quot;&gt;www.w3.org/blog/news/archives/9509&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssembly 2.0 First Public Working Draftが公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-0-0-inikulin-parse5&quot;&gt;Release v7.0.0 · inikulin/parse5&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/inikulin/parse5/releases/tag/v7.0.0&quot; title=&quot;Release v7.0.0 · inikulin/parse5&quot;&gt;github.com/inikulin/parse5/releases/tag/v7.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTMLパーサのparse5 7.0.0リリース。&lt;br&gt;
ESMモジュール化、TypeScriptで書き直し型定義を同梱するように、&lt;code&gt;parse5-serializer-stream&lt;/code&gt;の削除など。&lt;br&gt;
また、パフォーマンスが改善されている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-packemon-2-0-0-milesj-packemon&quot;&gt;Release &lt;a href=&quot;mailto:packemon@2.0.0&quot;&gt;packemon@2.0.0&lt;/a&gt; · milesj/packemon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/milesj/packemon/releases/tag/packemon%402.0.0&quot; title=&quot;Release packemon@2.0.0 · milesj/packemon&quot;&gt;github.com/milesj/packemon/releases/tag/packemon%402.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ライブラリ向けのモジュールbundlerであるpackemon　2.0.0リリース。&lt;br&gt;
IE向けのビルドを削除、Node 14未満のサポート終了、&lt;br&gt;
SWCのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3-12-0-prisma-prisma&quot;&gt;Release 3.12.0 · prisma/prisma&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/prisma/prisma/releases/3.12.0&quot; title=&quot;Release 3.12.0 · prisma/prisma&quot;&gt;github.com/prisma/prisma/releases/3.12.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;prisma&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MongoDB&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prisma 3.12.0リリース。&lt;br&gt;
MongoDBがGenerally Availableとなった&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-2-0-reduxjs-redux&quot;&gt;Release v4.2.0 · reduxjs/redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reduxjs/redux/releases/tag/v4.2.0&quot; title=&quot;Release v4.2.0 · reduxjs/redux&quot;&gt;github.com/reduxjs/redux/releases/tag/v4.2.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Redux v4.2.0リリース。&lt;br&gt;
&lt;code&gt;@reduxjs/toolkit&lt;/code&gt;への移行を促すために、&lt;code&gt;createStore&lt;/code&gt; APIをDeprecatedにして、&lt;code&gt;legacy_createStore&lt;/code&gt; APIを追加。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reduxjs/redux/issues/4325&quot; title=&quot;Mark \&amp;amp;#x60;createStore\&amp;amp;#x60; as deprecated · Issue #4325 · reduxjs/redux&quot;&gt;Mark `createStore` as deprecated · Issue #4325 · reduxjs/redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://redux.js.org/introduction/why-rtk-is-redux-today&quot; title=&quot;Why Redux Toolkit is How To Use Redux Today | Redux&quot;&gt;Why Redux Toolkit is How To Use Redux Today | Redux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-21-release-notes&quot;&gt;Deno 1.21 Release Notes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.21&quot; title=&quot;Deno 1.21 Release Notes&quot;&gt;deno.com/blog/v1.21&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.21リリース。&lt;br&gt;
明示的に型チェックをする&lt;code&gt;deno check&lt;/code&gt;コマンドを追加し、次のリリースで&lt;code&gt;deno run&lt;/code&gt;の型チェックはデフォルトでは無効にする予定。&lt;br&gt;
&lt;code&gt;globalThis.reportError&lt;/code&gt;と&lt;code&gt;error&lt;/code&gt;イベントをサポート、&lt;code&gt;deno repl&lt;/code&gt;に&lt;code&gt;--eval-file&lt;/code&gt;フラグを追加。&lt;br&gt;
&lt;code&gt;deno fmt&lt;/code&gt;と&lt;code&gt;deno lint&lt;/code&gt;がデフォルトでキャッシュされるように。&lt;br&gt;
UnstableなAPIとして、&lt;code&gt;Deno.spawn&lt;/code&gt;/&lt;code&gt;Deno.spawnChild&lt;/code&gt;/&lt;code&gt;Deno.spawnSync&lt;/code&gt;の追加。&lt;br&gt;
&lt;code&gt;deno test&lt;/code&gt;のBDDライクな&lt;code&gt;describe&lt;/code&gt;や&lt;code&gt;it&lt;/code&gt;などのメソッドを追加、STDに&lt;code&gt;spy&lt;/code&gt;/&lt;code&gt;stub&lt;/code&gt;/&lt;code&gt;assertSnapshot&lt;/code&gt;/&lt;code&gt;FakeTime&lt;/code&gt;を追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/denoland/deno/issues/11016&quot; title=&quot;Implement new two-tier subprocess API · Issue #11016 · denoland/deno&quot;&gt;Implement new two-tier subprocess API · Issue #11016 · denoland/deno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-5-0-parcel-bundler-parcel&quot;&gt;Release v2.5.0 · parcel-bundler/parcel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/parcel-bundler/parcel/releases/tag/v2.5.0&quot; title=&quot;Release v2.5.0 · parcel-bundler/parcel&quot;&gt;github.com/parcel-bundler/parcel/releases/tag/v2.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Parcel v2.5.0リリース。&lt;br&gt;
WebExtension Manifest v3をサポート、&lt;code&gt;__dirname&lt;/code&gt;と&lt;code&gt;__filename&lt;/code&gt;の変換を修正、&lt;code&gt;process.env&lt;/code&gt;に対する&lt;code&gt;in&lt;/code&gt;演算子をサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-18-is-now-available-node-js&quot;&gt;Node.js 18 is now available! | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/announcements/v18-release-announce/&quot; title=&quot;Node.js 18 is now available! | Node.js&quot;&gt;nodejs.org/en/blog/announcements/v18-release-announce/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 18.0.0リリース。&lt;br&gt;
2022年10月にLTSとなる予定のメジャーバージョン。&lt;br&gt;
&lt;code&gt;fetch&lt;/code&gt; API、Web Streams API、&lt;code&gt;Blob&lt;/code&gt;/&lt;code&gt;broadcastChannel&lt;/code&gt; APIなどウェブ標準をサポート。&lt;br&gt;
&lt;code&gt;node:test&lt;/code&gt;モジュールの追加、&lt;code&gt;--node-snapshot-main&lt;/code&gt;の追加、V8 10.1へアップデートなど。&lt;br&gt;
また、&lt;code&gt;server.headersTimeout&lt;/code&gt;と&lt;code&gt;server.requestTimeout&lt;/code&gt;のデフォルト値の変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/releases/tag/v18.0.0&quot; title=&quot;Release 2022-04-19, Version 18.0.0 (Current), @BethGriggs · nodejs/node&quot;&gt;Release 2022-04-19, Version 18.0.0 (Current), @BethGriggs · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shisama.hatenablog.com/entry/2022/04/20/011103&quot; title=&quot;Node.js v18 の主な変更点 - 別にしんどくないブログ&quot;&gt;Node.js v18 の主な変更点 - 別にしんどくないブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nuxt-announcing-nuxt-3-release-candidate&quot;&gt;Nuxt - Announcing Nuxt 3 Release Candidate&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nuxtjs.org/announcements/nuxt3-rc/&quot; title=&quot;Nuxt - Announcing Nuxt 3 Release Candidate&quot;&gt;nuxtjs.org/announcements/nuxt3-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxt 3 RCリリース。&lt;br&gt;
Vue 3、TypeScript、Viteのサポート。&lt;br&gt;
サーバーエンジンのNitroとポータブルな出力の対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jest-28-shedding-weight-and-improving-compatibility-jest&quot;&gt;Jest 28: Shedding weight and improving compatibility 🫶 · Jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jestjs.io/blog/2022/04/25/jest-28&quot; title=&quot;Jest 28: Shedding weight and improving compatibility 🫶 · Jest&quot;&gt;jestjs.io/blog/2022/04/25/jest-28&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jest 28リリース。&lt;br&gt;
テストを分割して実行できる&lt;code&gt;--shard&lt;/code&gt;オプションの追加、&lt;code&gt;exports&lt;/code&gt;フィールドの対応、fakeTimersの改善、GitHub Actionsのreporters対応。&lt;br&gt;
&lt;code&gt;testEnvironmentOptions&lt;/code&gt;をインラインコメントで定義できるように、&lt;code&gt;fetch&lt;/code&gt;などのグローバル対応、ESM対応の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-jotai-specifies-package-entry-points-daishi-katos-blog&quot;&gt;How Jotai Specifies Package Entry Points · Daishi Kato&amp;#039;s blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.axlight.com/posts/how-jotai-specifies-package-entry-points/&quot; title=&quot;How Jotai Specifies Package Entry Points · Daishi Kato&amp;amp;#039;s blog&quot;&gt;blog.axlight.com/posts/how-jotai-specifies-package-entry-points/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;exports&lt;/code&gt;フィールドについての記事。&lt;br&gt;
&lt;code&gt;default&lt;/code&gt;と&lt;code&gt;import&lt;/code&gt;指定を使ったESMとCJSの対応、一部ツールのための&lt;code&gt;package.json&lt;/code&gt;や&lt;code&gt;module&lt;/code&gt;指定のfallback、TypeScriptの&lt;code&gt;.d.ts&lt;/code&gt;の対応などについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-we-migrated-from-javascript-and-flow-to-typescript-at-osome-dev-community&quot;&gt;How We Migrated from Javascript and Flow to TypeScript at Osome - DEV Community 👩‍💻👨‍💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/frolovdev/how-we-migrated-from-javascript-and-flow-to-typescript-at-osome-4661&quot; title=&quot;How We Migrated from Javascript and Flow to TypeScript at Osome - DEV Community 👩‍💻👨‍💻&quot;&gt;dev.to/frolovdev/how-we-migrated-from-javascript-and-flow-to-typescript-at-osome-4661&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptとFlowTypeからTypeScriptへのマイグレーションをした話。&lt;br&gt;
depcruiseでの依存グラフのチェック、Flow to TSとTS Migrateを使った移行、型がついたコードのカバレッジを調べるツールについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;unjs-nitro-build-and-deploy-universal-javascript-servers&quot;&gt;unjs/nitro: ⚗️ Build and deploy universal JavaScript servers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/unjs/nitro&quot; title=&quot;unjs/nitro: ⚗️ Build and deploy universal JavaScript servers&quot;&gt;github.com/unjs/nitro&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxt 3で利用されているサーバエンジン。&lt;br&gt;
ディレクトリベースのルーティング、Vercel/AWS Lambada/Cloudflare Workersなどのプロバイダにデプロイできるサーバコード生成機能を持つ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;plantain-00-type-coverage-a-cli-tool-to-check-type-coverage-for-typescript-code&quot;&gt;plantain-00/type-coverage: A CLI tool to check type coverage for typescript code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/plantain-00/type-coverage&quot; title=&quot;plantain-00/type-coverage: A CLI tool to check type coverage for typescript code&quot;&gt;github.com/plantain-00/type-coverage&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;型がついている(&lt;code&gt;any&lt;/code&gt;ではない)TypeScriptのコードカバレッジを出すツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eolme-i18nano-lightweight-translation-module-with-functionality-similar-to-react-i18next&quot;&gt;eolme/i18nano: Lightweight translation module with functionality similar to react-i18next&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eolme/i18nano&quot; title=&quot;eolme/i18nano: Lightweight translation module with functionality similar to react-i18next&quot;&gt;github.com/eolme/i18nano&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React向けのi18nコンポーネント。&lt;br&gt;
言語ごとのファイルをDynamic Importでロードできるようになっている&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 26 Apr 2022 12:17:15 +0900</pubDate>
        <link>https://jser.info/2022/04/26/redux-v4.2.0-node.js-18-jest-28/</link>
        <guid isPermaLink="true">https://jser.info/2022/04/26/redux-v4.2.0-node.js-18-jest-28/</guid>
        
        <category>node.js</category>
        
        <category>Tools</category>
        
        <category>TypeScript</category>
        
        <category>WebAssembly</category>
        
        <category>proposal</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2022-04-18のJS: Lexical、React Testing Library v13.1.0、Dialog componentの作成</title>
        <description>&lt;p&gt;JSer.info #588 - Lexicalというテキストエディタを作るためのJavaScriptフレームワークが公開されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/lexical&quot;&gt;facebook/lexical: Lexical is an extensible text editor framework that provides excellent reliability, accessibility and performance.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;エディタの状態をdouble-bufferingで管理して、状態の変更をdiff/patchで表示に反映させる仕組みを持っている。&lt;br&gt;
またcontentEditableを使っているが、外部からの変更をMutationObserverで監視し、エディタの状態を更新している。&lt;/p&gt;

&lt;p&gt;Lexicalは同じくFacebookが作成している&lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt;の後継となるライブラリで、APIの互換性はありませんが、今後マイグレーションガイドを作成していく予定とのことです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/lexical/issues/1641&quot;&gt;Add Draft JS to Lexical migration documentation · Issue #1641 · facebook/lexical&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;React DOMのテストライブラリであるReact Testing Library v13.1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/releases/tag/v13.1.0&quot;&gt;Release v13.1.0 · testing-library/react-testing-library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React Testing Library v13.1.0では、&lt;code&gt;renderHook&lt;/code&gt;というAPIが追加されています。&lt;br&gt;
このAPIは、React Hooksのテストをするためのもので、&lt;a href=&quot;https://github.com/testing-library/react-hooks-testing-library&quot;&gt;&lt;code&gt;@testing-library/react-hooks&lt;/code&gt;&lt;/a&gt;の実装を元にしています。&lt;/p&gt;

&lt;p&gt;詳しい経緯は次のPRで書かれていますが、&lt;a href=&quot;https://github.com/testing-library/react-hooks-testing-library&quot;&gt;&lt;code&gt;@testing-library/react-hooks&lt;/code&gt;&lt;/a&gt;はReact 18の対応が難しい部分があったため、&lt;code&gt;renderHook&lt;/code&gt;というシンプルなAPIが&lt;code&gt;@testing-library/react&lt;/code&gt;へと実装されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pull/991&quot;&gt;feat: Add &lt;code&gt;renderHook&lt;/code&gt; by eps1lon · Pull Request #991 · testing-library/react-testing-library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そのため、今後&lt;code&gt;@testing-library/react-hooks&lt;/code&gt;は非推奨する予定となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/testing-library/react-hooks-testing-library#a-note-about-react-18-support&quot;&gt;https://github.com/testing-library/react-hooks-testing-library#a-note-about-react-18-support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/building-a-dialog-component/&quot;&gt;Building a dialog component&lt;/a&gt;という記事では&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;要素を使ったダイアログコンポーネントの作成について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;inert&lt;/code&gt;属性、&lt;code&gt;autofocus&lt;/code&gt;属性、CSSの&lt;code&gt;overscroll-behavior&lt;/code&gt;プロパティなど、関連するアクセシビリティの機能などについても書かれているので、興味がある人は読んでみると良さそうです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3-22-0-2022-04-15-zloirock-core-js&quot;&gt;Release 3.22.0 - 2022.04.15 · zloirock/core-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v3.22.0&quot; title=&quot;Release 3.22.0 - 2022.04.15 · zloirock/core-js&quot;&gt;github.com/zloirock/core-js/releases/tag/v3.22.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;core-js v3.22.0リリース。&lt;br&gt;
Change Array by copy proposalの仕様追従、&lt;code&gt;atob&lt;/code&gt;/&lt;code&gt;btoa&lt;/code&gt;の修正、compat dataの更新など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-4-0-remix-run-remix&quot;&gt;Release v1.4.0 · remix-run/remix&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/remix-run/remix/releases/tag/v1.4.0&quot; title=&quot;Release v1.4.0 · remix-run/remix&quot;&gt;github.com/remix-run/remix/releases/tag/v1.4.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Remix&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Remix v1.4.0リリース。&lt;br&gt;
&lt;code&gt;remix&lt;/code&gt;という単独のパッケージを参照させる&amp;quot;magic imports&amp;quot;という仕組みのために、&lt;code&gt;node_modules&lt;/code&gt;を直接編集してたがpnpmなどで動かない問題があった。&lt;br&gt;
そのため、それぞれのパッケージを参照するようにするためのマイグレーションスクリプトの公開とそれに関連する変更が含まれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v8-0-0-reduxjs-react-redux&quot;&gt;Release v8.0.0 · reduxjs/react-redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reduxjs/react-redux/releases/tag/v8.0.0&quot; title=&quot;Release v8.0.0 · reduxjs/react-redux&quot;&gt;github.com/reduxjs/react-redux/releases/tag/v8.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React-Redux v8.0.0リリース。&lt;br&gt;
コードベースをTypeScriptに書き換え、APIの互換性は維持している。&lt;br&gt;
&lt;code&gt;useSyncExternalStore&lt;/code&gt;を使ったReact 18の対応、TypeScriptの型定義から&lt;code&gt;DefaultRootState&lt;/code&gt;を削除、&lt;code&gt;connectAdvanced&lt;/code&gt;の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;util-add-parseargs-module-by-bcoe-pull-request-42675-nodejs-node&quot;&gt;util: add parseArgs module by bcoe · Pull Request #42675 · nodejs/node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/42675&quot; title=&quot;util: add parseArgs module by bcoe · Pull Request #42675 · nodejs/node&quot;&gt;github.com/nodejs/node/pull/42675&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsにコマンドライン引数のパースをする&lt;code&gt;util.parseArgs&lt;/code&gt;を追加するProposal&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pkgjs/parseargs&quot; title=&quot;pkgjs/parseargs: Polyfill of future proposal for \&amp;amp;#x60;util.parseArgs()\&amp;amp;#x60;&quot;&gt;pkgjs/parseargs: Polyfill of future proposal for `util.parseArgs()`&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v13-1-0-testing-library-react-testing-library&quot;&gt;Release v13.1.0 · testing-library/react-testing-library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/releases/tag/v13.1.0&quot; title=&quot;Release v13.1.0 · testing-library/react-testing-library&quot;&gt;github.com/testing-library/react-testing-library/releases/tag/v13.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;react-testing-library 13.1.0リリース。&lt;br&gt;
React 18のHooksをテストするための&lt;code&gt;renderHook&lt;/code&gt; APIを追加。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pull/991&quot; title=&quot;feat: Add \&amp;amp;#x60;renderHook\&amp;amp;#x60; by eps1lon · Pull Request #991 · testing-library/react-testing-library&quot;&gt;feat: Add `renderHook` by eps1lon · Pull Request #991 · testing-library/react-testing-library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/testing-library/react-hooks-testing-library#a-note-about-react-18-support&quot; title=&quot;testing-library/react-hooks-testing-library: 🐏 Simple and complete React hooks testing utilities that encourage good testing practices.&quot;&gt;testing-library/react-hooks-testing-library: 🐏 Simple and complete React hooks testing utilities that encourage good testing practices.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2-0-0-beta-1-vercel-swr&quot;&gt;Release 2.0.0-beta.1 · vercel/swr&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vercel/swr/releases/tag/2.0.0-beta.1&quot; title=&quot;Release 2.0.0-beta.1 · vercel/swr&quot;&gt;github.com/vercel/swr/releases/tag/2.0.0-beta.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SWR 2.0.0-beta.1リリース。&lt;br&gt;
&lt;code&gt;useSWR&lt;/code&gt;が&lt;code&gt;isLoading&lt;/code&gt;を返すように、&lt;code&gt;keepPreviousData&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-react-18-features-and-changes-xebia&quot;&gt;New React 18 features and changes - Xebia&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://xebia.com/new-react-18-features-and-changes/&quot; title=&quot;New React 18 features and changes - Xebia&quot;&gt;xebia.com/new-react-18-features-and-changes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 18の変更点についての解説。&lt;br&gt;
Concurrent renderer、createRoot/hydrateRootとonRecoverableErrorについて。&lt;br&gt;
Automatic batchingとflushSync。&lt;br&gt;
新しく追加されたHooks APIであるuseTransition/useDeferredValue、useId、useSyncExternalStore、useInsertionEffectについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;session-cookie-base&quot;&gt;なぜ我々はsession.cookieを変更しなければならなかったのか - BASEプロダクトチームブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblog.thebase.in/entry/2022/04/13/114714&quot; title=&quot;なぜ我々はsession.cookieを変更しなければならなかったのか - BASEプロダクトチームブログ&quot;&gt;devblog.thebase.in/entry/2022/04/13/114714&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;privacy&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Public Suffix Listへの追加申請と、ブラウザに同梱されるタイミングの話。&lt;br&gt;
ブラウザの復元機能によって、変更前と変更後の同名Cookieが存在してしまう問題とブラウザごとの挙動の違いについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;building-a-dialog-component&quot;&gt;Building a dialog component&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/building-a-dialog-component/&quot; title=&quot;Building a dialog component&quot;&gt;web.dev/building-a-dialog-component/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;要素を使ったダイアログの作成とアクセシビリティについての記事。&lt;br&gt;
ダイアログ表示とユーザー入力を無視する&lt;code&gt;inert&lt;/code&gt;属性、&lt;code&gt;autofocus&lt;/code&gt;属性、ESCキーでの非表示。&lt;br&gt;
&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;要素のスタイル、Header/Footerのデザイン、&lt;code&gt;overscroll-behavior&lt;/code&gt;でのbody scroll lock、JavaScriptとの連携方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;boost-resource-loading-with-fetchpriority-a-new-priority-hint-smashing-magazine&quot;&gt;Boost Resource Loading With fetchpriority, a New Priority Hint — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2022/04/boost-resource-loading-new-priority-hint-fetchpriority/&quot; title=&quot;Boost Resource Loading With fetchpriority, a New Priority Hint — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2022/04/boost-resource-loading-new-priority-hint-fetchpriority/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;リソースロードの優先度を定義する&lt;code&gt;fetchpriority&lt;/code&gt;属性について。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/priority-hints&quot; title=&quot;WICG/priority-hints: A browser API to enable developers signal the priorities of the resources they need to download.&quot;&gt;WICG/priority-hints: A browser API to enable developers signal the priorities of the resources they need to download.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/fetchpriority&quot; title=&quot;HTMLIFrameElement.fetchpriority - Web APIs | MDN&quot;&gt;HTMLIFrameElement.fetchpriority - Web APIs | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;turborepo-monorepo-issue-13-worldzhao-blog&quot;&gt;从 Turborepo 看 Monorepo 工具的任务编排能力 · Issue #13 · worldzhao/blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/worldzhao/blog/issues/13&quot; title=&quot;从 Turborepo 看 Monorepo 工具的任务编排能力 · Issue #13 · worldzhao/blog&quot;&gt;github.com/worldzhao/blog/issues/13&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;monorepo&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;monorepoにおける依存関係の管理、タスクのスケジューリング、バージョン管理について。&lt;br&gt;
タスクの並列実行、トポロジカルソース、TurborepoとRushのアプローチ、リモートキャッシュについての解説。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;facebook-lexical-lexical-is-an-extensible-text-editor-framework-that-provides-excellent-reliability-accessibility-and-performance&quot;&gt;facebook/lexical: Lexical is an extensible text editor framework that provides excellent reliability, accessibility and performance.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/lexical&quot; title=&quot;facebook/lexical: Lexical is an extensible text editor framework that provides excellent reliability, accessibility and performance.&quot;&gt;github.com/facebook/lexical&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;テキストエディタを作るためのJavaScriptフレームワーク。&lt;br&gt;
エディタの状態をdouble-bufferingで管理している。&lt;br&gt;
状態の変更をdiff/patchで表示に反映させる。&lt;br&gt;
またcontentEditableを使っているが、外部からの変更をMutationObserverで監視し、エディタの状態を更新している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thomasaribart-json-schema-to-ts-infer-ts-types-from-json-schemas&quot;&gt;ThomasAribart/json-schema-to-ts: Infer TS types from JSON schemas 📝&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ThomasAribart/json-schema-to-ts&quot; title=&quot;ThomasAribart/json-schema-to-ts: Infer TS types from JSON schemas 📝&quot;&gt;github.com/ThomasAribart/json-schema-to-ts&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSON SchemaからTypeScriptの型へ変換するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;shopify-javy-js-to-webassembly-toolchain&quot;&gt;Shopify/javy: JS to WebAssembly toolchain&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Shopify/javy&quot; title=&quot;Shopify/javy: JS to WebAssembly toolchain&quot;&gt;github.com/Shopify/javy&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのコードを実行するWebAssembly。&lt;br&gt;
JavaScriptエンジンにはQuickJSを利用している。&lt;br&gt;
Shopifyで利用されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ehmicky-wild-wild-path-object-property-paths-with-wildcards-and-regexps&quot;&gt;ehmicky/wild-wild-path: 🤠 Object property paths with wildcards and regexps 🌵&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ehmicky/wild-wild-path&quot; title=&quot;ehmicky/wild-wild-path: 🤠 Object property paths with wildcards and regexps 🌵&quot;&gt;github.com/ehmicky/wild-wild-path&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;*&lt;/code&gt;と正規表現でマッチしたオブジェクトのプロパティの取得と設定ができるライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 18 Apr 2022 22:36:16 +0900</pubDate>
        <link>https://jser.info/2022/04/18/lexical-react-testing-library-v13.1.0-dialog-component/</link>
        <guid isPermaLink="true">https://jser.info/2022/04/18/lexical-react-testing-library-v13.1.0-dialog-component/</guid>
        
        <category>React</category>
        
        <category>HTML</category>
        
        <category>JSON</category>
        
        <category>TypeScript</category>
        
        <category>polyfill</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2022-04-13のJS: TypeScript 4.7 Beta、RedwoodJS 1.0、Sanitizer API</title>
        <description>&lt;p&gt;JSer.info #587 - TypeScript 4.7 Betaがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-7-beta/&quot;&gt;Announcing TypeScript 4.7 Beta - TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TypeScript 4.5 Betaで導入されNightlyでテストされていた、Node.jsのECMAScript Moduleサポートを再び有効化されています。&lt;br&gt;
これに関連して&lt;code&gt;package.json&lt;/code&gt;の&lt;code&gt;exports&lt;/code&gt;フィールドのサポート、&lt;code&gt;&amp;quot;module&amp;quot;: &amp;quot;nodenext&amp;quot;&lt;/code&gt;、&lt;code&gt;.mts&lt;/code&gt;/&lt;code&gt;cts&lt;/code&gt;の拡張子のサポートが追加されています。&lt;br&gt;
また、Node.jsではファイルがモジュールかどうかは&lt;code&gt;package.json&lt;/code&gt;の&lt;code&gt;module&lt;/code&gt;フィールドなどによって暗黙的に異なります。&lt;br&gt;
そのため、ファイルがモジュールかどうかを判定方法を制御できる&lt;code&gt;moduleDetection&lt;/code&gt;オプションも追加して、強制的(&lt;code&gt;force&lt;/code&gt;)にモジュールとして認識させることもできるようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/47495&quot;&gt;Add moduleDetection compiler flag to allow for changing how modules are parsed by weswigham · Pull Request #47495 · microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;型推論の改善として、Computedプロパティに対するコントロールフロー解析の改善、オブジェクトにおける関数の型推論の改善が含まれています。&lt;/p&gt;

&lt;p&gt;Genericsの型を指定したaliasを定義できる Instantiation Expressionsをサポート。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ErrorMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/47495&quot;&gt;Add moduleDetection compiler flag to allow for changing how modules are parsed by weswigham · Pull Request #47495 · microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;infer&lt;/code&gt;に対する&lt;code&gt;extends&lt;/code&gt;での推論条件の追加をサポート、型が共変(&lt;code&gt;in&lt;/code&gt;)/反変(&lt;code&gt;out&lt;/code&gt;)/不変(&lt;code&gt;in out&lt;/code&gt;)なのかを指定できるアノテーションを追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/48240&quot;&gt;Optional variance annotations by ahejlsberg · Pull Request #48240 · microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;モジュール解決時の探索方法をカスタマイズする&lt;code&gt;moduleSuffixes&lt;/code&gt;オプションの追加、&lt;code&gt;import type&lt;/code&gt;とReference Commentで&lt;code&gt;resolution-mode&lt;/code&gt;を指定できるようになっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1eLmIZkY7auD8xT-Q6AzBKM_ASFHH8Z5fMyfeoSbSH-k/view#slide=id.g82761e80df_0_1948&quot;&gt;Making of: The Sanitizer API (Nullcon 2022) - Google スライド&lt;/a&gt;というスライドでは、&lt;a href=&quot;https://wicg.github.io/sanitizer-api/&quot;&gt;HTML Sanitizer API&lt;/a&gt;という策定中/実装中のウェブ標準について紹介されています。&lt;/p&gt;

&lt;p&gt;信頼できないHTML文字列のインジェクトするときに、そのHTML文字列をサニタイズしてXSSを防止するためのAPIです。&lt;br&gt;
最初は、HTML文字列をサニタイズしてHTML文字列を返すAPIとして進められていました、HTMLのパースモードの違いなどからパイパスする方法があることが発見されました。(HTML文字列という文字列のフラグメントに対するサニタイズは安全にはできないと分かった)&lt;/p&gt;

&lt;p&gt;そのため、&lt;code&gt;innerHTML&lt;/code&gt;とよく似た&lt;code&gt;setHTML&lt;/code&gt;という新しいAPIが策定され、このAPIにsanitizerを渡す形に変更された話が書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/sanitizer-api/issues/42&quot;&gt;Sanitizer API creating mock context-element can cause XSS when used in different context · Issue #42 · WICG/sanitizer-api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1669945&quot;&gt;1669945 - Sanitizer bypass if the sanitized markup is assigned to srcdoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;astro-1-0-beta-release-astro&quot;&gt;Astro 1.0 Beta Release | Astro&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://astro.build/blog/astro-1-beta-release/&quot; title=&quot;Astro 1.0 Beta Release | Astro&quot;&gt;astro.build/blog/astro-1-beta-release/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Astro 1.0 betaリリース。&lt;br&gt;
2022年6月8日に正式リリースの予定。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-rome-formatter&quot;&gt;Announcing Rome Formatter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rome.tools/blog/2022/04/05/rome-formatter-release&quot; title=&quot;Announcing Rome Formatter&quot;&gt;rome.tools/blog/2022/04/05/rome-formatter-release&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rustに書き直されたRomeのFormatterがリリースされた。&lt;br&gt;
Prettierの挙動をベースにしていて、opt-inで構文エラーのコードに対する整形も対応している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v8-0-0-cucumber-cucumber-js&quot;&gt;Release v8.0.0 · cucumber/cucumber-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cucumber/cucumber-js/releases/tag/v8.0.0&quot; title=&quot;Release v8.0.0 · cucumber/cucumber-js&quot;&gt;github.com/cucumber/cucumber-js/releases/tag/v8.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cucumber.js 8.0.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-redwoodjs-1-0-and-1m-funding&quot;&gt;Announcing RedwoodJS 1.0 and $1M Funding&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tom.preston-werner.com/2022/04/04/redwood-v1-and-funding.html&quot; title=&quot;Announcing RedwoodJS 1.0 and $1M Funding&quot;&gt;tom.preston-werner.com/2022/04/04/redwood-v1-and-funding.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;prisma&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jest&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React/GraphQL/Prisma/Jest/Storybookを組み合わせたアプリケーションフレームワークであるRedwoodJS 1.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://community.redwoodjs.com/t/redwood-1-0-0-rc-final-is-available/2902&quot; title=&quot;Redwood 1.0.0-rc.final is Available 🚀 - Announcements / Releases and Upgrade Guides - RedwoodJS Community&quot;&gt;Redwood 1.0.0-rc.final is Available 🚀 - Announcements / Releases and Upgrade Guides - RedwoodJS Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-7-beta-typescript&quot;&gt;Announcing TypeScript 4.7 Beta - TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-7-beta/&quot; title=&quot;Announcing TypeScript 4.7 Beta - TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-7-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.7 betaリリース。&lt;br&gt;
Node.jsのECMAScript Moduleサポートを再び有効化、&lt;code&gt;moduleDetection&lt;/code&gt;オプションの追加。&lt;br&gt;
Compuatedプロパティに対するコントロールフロー解析の改善、オブジェクトにおける関数の型推論の改善。Genericsの型を指定したaliasを定義できる Instantiation Expressionsをサポート。&lt;br&gt;
&lt;code&gt;infer&lt;/code&gt;に対する&lt;code&gt;extends&lt;/code&gt;での推論条件の追加をサポート、型が共変(&lt;code&gt;in&lt;/code&gt;)/反変(&lt;code&gt;out&lt;/code&gt;)/不変(&lt;code&gt;in out&lt;/code&gt;)なのかを指定できるアノテーションを追加。&lt;br&gt;
モジュール解決持の探索方法をカスタマイズする&lt;code&gt;moduleSuffixes&lt;/code&gt;オプションの追加、&lt;code&gt;import type&lt;/code&gt;とReference Commentで&lt;code&gt;resolution-mode&lt;/code&gt;を指定できるように。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-143-webkit&quot;&gt;Release Notes for Safari Technology Preview 143 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/12563/release-notes-for-safari-technology-preview-143/&quot; title=&quot;Release Notes for Safari Technology Preview 143 | WebKit&quot;&gt;webkit.org/blog/12563/release-notes-for-safari-technology-preview-143/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 143リリース。&lt;br&gt;
CSS Container Queriesの改善、CSS Cascade Layersの改善。Web Animation APIの改善。&lt;br&gt;
Permissions APIをデフォルトで有効化、&lt;code&gt;inert&lt;/code&gt;属性をデフォルトで有効化。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/HTMLElement/inert&quot; title=&quot;HTMLElement.inert - Web API | MDN&quot;&gt;HTMLElement.inert - Web API | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;turborepo-1-2-turborepo&quot;&gt;Turborepo 1.2 | Turborepo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://turborepo.org/blog/turbo-1-2-0&quot; title=&quot;Turborepo 1.2 | Turborepo&quot;&gt;turborepo.org/blog/turbo-1-2-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;monorepo&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Turborepot 1.2リリース。&lt;br&gt;
対象をフィルターできる&lt;code&gt;--filter&lt;/code&gt;フラグの追加、&lt;code&gt;--dry-run&lt;/code&gt;フラグの追加。&lt;br&gt;
パフォーマンスの改善、キャッシュの整合性をHMACで検証できる&lt;code&gt;signature&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v8-0-0-rc-0-reduxjs-react-redux&quot;&gt;Release v8.0.0-rc.0 · reduxjs/react-redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reduxjs/react-redux/releases/tag/v8.0.0-rc.0&quot; title=&quot;Release v8.0.0-rc.0 · reduxjs/react-redux&quot;&gt;github.com/reduxjs/react-redux/releases/tag/v8.0.0-rc.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React-Redux v8.0.0-rc.0リリース。&lt;br&gt;
&lt;code&gt;@types/react-readux&lt;/code&gt;に存在した&lt;code&gt;DefaultRootState&lt;/code&gt;の型定義を削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;goldbergyoni-javascript-testing-best-practices-comprehensive-and-exhaustive-javascript-node-js-testing-best-practices-april-2022&quot;&gt;goldbergyoni/javascript-testing-best-practices: 📗🌐 🚢 Comprehensive and exhaustive JavaScript &amp;amp; Node.js testing best practices (April 2022)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices&quot; title=&quot;goldbergyoni/javascript-testing-best-practices: 📗🌐 🚢 Comprehensive and exhaustive JavaScript &amp;amp;amp; Node.js testing best practices (April 2022)&quot;&gt;github.com/goldbergyoni/javascript-testing-best-practices&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのテストについてのドキュメント。 テストの構造、バックエンド、フロントエンド、CIなどについて書かれているjavascript-testing-best-practicesがアップデートされた&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2-0-0-beta-0-vercel-swr&quot;&gt;Release 2.0.0-beta.0 · vercel/swr&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vercel/swr/releases/tag/2.0.0-beta.0&quot; title=&quot;Release 2.0.0-beta.0 · vercel/swr&quot;&gt;github.com/vercel/swr/releases/tag/2.0.0-beta.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SWR 2.0.0-beta.0リリース。&lt;br&gt;
リモートの副作用のあるリクエストを扱う&lt;code&gt;useSWRMutation&lt;/code&gt;の追加。&lt;br&gt;
破壊的な変更としてFetcherには複数の引数として展開しないように変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;04-01-2022-typescript-how-the-compiler-compiles&quot;&gt;04.01.2022 - TypeScript/How the compiler compiles&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.huy.rocks/everyday/04-01-2022-typescript-how-the-compiler-compiles&quot; title=&quot;04.01.2022 - TypeScript/How the compiler compiles&quot;&gt;www.huy.rocks/everyday/04-01-2022-typescript-how-the-compiler-compiles&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript CompilerがどうやってTypeScritのコードをコンパイル、エラーを報告しているかについての解説記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-change-array-by-copy-four-new-non-destructive-array-methods&quot;&gt;ECMAScript proposal “Change Array by copy”: four new non-destructive Array methods&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://2ality.com/2022/04/change-array-by-copy.html&quot; title=&quot;ECMAScript proposal “Change Array by copy”: four new non-destructive Array methods&quot;&gt;2ality.com/2022/04/change-array-by-copy.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript Proposal Stage 3のChange Array by copyについて。&lt;br&gt;
Arrayのメソッドには破壊的なメソッドが混ざっていたが、それに対応する非破壊的なメソッドを追加するProposal&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;making-of-the-sanitizer-api-nullcon-2022-google&quot;&gt;Making of: The Sanitizer API (Nullcon 2022) - Google スライド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1eLmIZkY7auD8xT-Q6AzBKM_ASFHH8Z5fMyfeoSbSH-k/view#slide=id.g82761e80df_0_1948&quot; title=&quot;Making of: The Sanitizer API (Nullcon 2022) - Google スライド&quot;&gt;docs.google.com/presentation/d/1eLmIZkY7auD8xT-Q6AzBKM_ASFHH8Z5fMyfeoSbSH-k/view#slide&amp;#x3D;id.g82761e80df_0_1948&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;API&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Sanitizer APIについてのスライド。 &lt;br&gt;
DOM XSSを防ぐSanitizer APIがサニタイズしたHTML文字列を返すAPIではない理由、&lt;code&gt;setHTML&lt;/code&gt; APIについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/sanitizer-api/issues/42&quot; title=&quot;Sanitizer API creating mock context-element can cause XSS when used in different context · Issue #42 · WICG/sanitizer-api&quot;&gt;Sanitizer API creating mock context-element can cause XSS when used in different context · Issue #42 · WICG/sanitizer-api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1669945&quot; title=&quot;1669945 - Sanitizer bypass if the sanitized markup is assigned to srcdoc&quot;&gt;1669945 - Sanitizer bypass if the sanitized markup is assigned to srcdoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;antfu-vue-starport-shared-component-across-routes-with-animations&quot;&gt;antfu/vue-starport: 🛰 Shared component across routes with animations&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/antfu/vue-starport&quot; title=&quot;antfu/vue-starport: 🛰 Shared component across routes with animations&quot;&gt;github.com/antfu/vue-starport&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ページをまたいでで同じコンポーネントを表示、遷移アニメーションを行うVueコンポーネント。&lt;br&gt;
共有するコンポーネントをRootに引き上げることで、ページ間で同じコンポーネントのインスタンスを維持している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;agnosticui-agnosticui-agnosticui-is-a-set-of-ui-primitives-that-start-their-lives-in-clean-html-and-css-these-standards-compliant-components-are-then-copied-to-our-framework-implementations-in-react-vue-3-angular-and-svelte&quot;&gt;AgnosticUI/agnosticui: AgnosticUI is a set of UI primitives that start their lives in clean HTML and CSS. These standards compliant components are then copied to our framework implementations in: React, Vue 3, Angular, and Svelte.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/agnosticui/agnosticui&quot; title=&quot;AgnosticUI/agnosticui: AgnosticUI is a set of UI primitives that start their lives in clean HTML and CSS. These standards compliant components are then copied to our framework implementations in: React, Vue 3, Angular, and Svelte.&quot;&gt;github.com/agnosticui/agnosticui&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;UIコンポーネントフレームワーク。&lt;br&gt;
プレーンなJSからも利用でき、React/Angular/Svelte/Vueなどの各種UIフレームワーク向けのパッケージも公開されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript&quot;&gt;プロを目指す人のためのTypeScript入門　安全なコードの書き方から高度な型の使い方まで：書籍案内｜技術評論社&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gihyo.jp/book/2022/978-4-297-12747-3&quot; title=&quot;プロを目指す人のためのTypeScript入門　安全なコードの書き方から高度な型の使い方まで：書籍案内｜技術評論社&quot;&gt;gihyo.jp/book/2022/978-4-297-12747-3&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2022年4月22日発売&lt;br&gt;
TypeScriptの入門書&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 13 Apr 2022 07:59:47 +0900</pubDate>
        <link>https://jser.info/2022/04/13/typescript-4.7-beta-redwoodjs-1.0-sanitizer-api/</link>
        <guid isPermaLink="true">https://jser.info/2022/04/13/typescript-4.7-beta-redwoodjs-1.0-sanitizer-api/</guid>
        
        <category>Tools</category>
        
        <category>TypeScript</category>
        
        <category>React</category>
        
        <category>testing</category>
        
        <category>book</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2022-04-06のJS: React 18、Vite 2.9.0、Firefoxの新しいパフォーマンスツール</title>
        <description>&lt;p&gt;JSer.info #586 - React 18が正式リリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactjs.org/blog/2022/03/29/react-v18.html&quot;&gt;React v18.0 – React Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Internet Explorerのサポートが終了されています。&lt;/p&gt;

&lt;p&gt;主な変更としてConcurrent Renderingに対応するための変更と新しいAPIが追加されています。&lt;br&gt;
setStateの呼び出しを自動的にバッチ化とopt-outするための&lt;code&gt;flushSync&lt;/code&gt;を追加、緊急と緊急ではない状態の更新を扱うTransition APIがされています。&lt;/p&gt;

&lt;p&gt;クライアントの&lt;code&gt;ReactDOM.render&lt;/code&gt;と&lt;code&gt;ReactDOM.hydrate&lt;/code&gt;とサーバの&lt;code&gt;renderToString&lt;/code&gt;はそれぞれ非推奨となっています。&lt;br&gt;
これに対応する新しいAPIとして、クライアントに&lt;code&gt;createRoot&lt;/code&gt;/&lt;code&gt;hydrateRoot&lt;/code&gt;、サーバに&lt;code&gt;renderToPipeableStream&lt;/code&gt;/&lt;code&gt;renderToReadableStream&lt;/code&gt;が追加されています。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;&amp;lt;StrictMode&amp;gt;&lt;/code&gt;が開発時は再マウントをテストする挙動に変更、&lt;code&gt;useId&lt;/code&gt;/&lt;code&gt;useSyncExternalStore&lt;/code&gt;/&lt;code&gt;useInsertionEffect&lt;/code&gt;のHooksの追加なども行われています。&lt;/p&gt;

&lt;p&gt;詳しいマイグレーション方法については、次のドキュメントが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html&quot;&gt;How to Upgrade to React 18 – React Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TypeScriptの型定義はまだReact 18の対応版が公開されていませんが、次のIssueとPRで対応されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/46691&quot;&gt;[RFC] React 18 and types-only breaking changes · Issue #46691 · DefinitelyTyped/DefinitelyTyped&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/56210&quot;&gt;[react] React 18 types by eps1lon · Pull Request #56210 · DefinitelyTyped/DefinitelyTyped&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React周辺のツールやライブラリのReact 18対応については、次の記事でまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/arayaryoma/scraps/3845eb077129b6&quot;&gt;React 周辺ツールの React v18 サポート&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Vite 2.9.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#290-2022-03-30&quot;&gt;vite/CHANGELOG.md at main · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;依存関係のscanとpre-bundleの処理を改善、実験的にCSSのSource Mapのサポート、Web WorkerのSource Mapサポートの改善が含まれています。&lt;br&gt;
Glob Importsに&lt;code&gt;{ as: &amp;#39;raw&amp;#39; }&lt;/code&gt;を追加し、&lt;code&gt;{ assert: { type: &amp;#39;raw&amp;#39; }}&lt;/code&gt;は非推奨化されています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{ assert: { type: &amp;#39;raw&amp;#39; }}&lt;/code&gt;はVite 2.8で、&lt;a href=&quot;https://github.com/tc39/proposal-import-assertions&quot;&gt;Import Assertions&lt;/a&gt;を意識して導入された構文ですが、Import Assertionsは読み込むモジュールの&lt;code&gt;type&lt;/code&gt;を検証(assert)する&lt;a href=&quot;https://github.com/WICG/webcomponents/issues/839&quot;&gt;目的&lt;/a&gt;のProposalです。そのため読み込むモジュールの評価方法を変更する構文ではありません。&lt;/p&gt;

&lt;p&gt;一方で、読み込むモジュールの評価方法を指定するProposalとして&lt;a href=&quot;https://github.com/tc39/proposal-import-reflection&quot;&gt;Import Reflection&lt;/a&gt;があります。Vite 2.9では、こちらのImport Reflectionを意識した構文に変更されました。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Firefoxのパフォーマンスツールが新しくなっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2022/03/performance-tool-in-firefox-devtools-reloaded/&quot;&gt;Performance Tool in Firefox DevTools Reloaded - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;UIも大きく変わり、取得できるデータもWebサイトや動画などの特性に合わせたプリセットが用意されていて、それぞれに合わせたプロファイルが取れるようになっています。&lt;br&gt;
また、取得したパフォーマンスデータは &lt;a href=&quot;https://profiler.firefox.com/&quot;&gt;https://profiler.firefox.com/&lt;/a&gt; で表示と共有ができるようになっています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-v18-0-react-blog&quot;&gt;React v18.0 – React Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2022/03/29/react-v18.html&quot; title=&quot;React v18.0 – React Blog&quot;&gt;reactjs.org/blog/2022/03/29/react-v18.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 18リリース。&lt;br&gt;
Concurrent Renderingに対応するための変更と新しいAPIが追加される。&lt;br&gt;
setStateの呼び出しを自動的にバッチ化とopt-outするための&lt;code&gt;flushSync&lt;/code&gt;を追加、ページ遷移時の状態を扱うTransition APIを追加。&lt;br&gt;
クライアントに&lt;code&gt;createRoot&lt;/code&gt;/&lt;code&gt;hydrateRoot&lt;/code&gt;、サーバに&lt;code&gt;renderToPipeableStream&lt;/code&gt;/&lt;code&gt;renderToReadableStream&lt;/code&gt;を追加。&lt;br&gt;
&lt;code&gt;&amp;lt;StrictMode&amp;gt;&lt;/code&gt;が開発時は再マウントをテストする挙動に変更、&lt;code&gt;useId&lt;/code&gt;/&lt;code&gt;useSyncExternalStore&lt;/code&gt;/&lt;code&gt;useInsertionEffect&lt;/code&gt;のHooksの追加など。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html&quot; title=&quot;How to Upgrade to React 18 – React Blog&quot;&gt;How to Upgrade to React 18 – React Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-3-0-remix-run-react-router&quot;&gt;Release v6.3.0 · remix-run/react-router&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/remix-run/react-router/releases/tag/v6.3.0&quot; title=&quot;Release v6.3.0 · remix-run/react-router&quot;&gt;github.com/remix-run/react-router/releases/tag/v6.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Router 6.3.0リリース。&lt;br&gt;
v5からv6に移行を補助するための&lt;code&gt;react-router-dom-v5-compat&lt;/code&gt;モジュールの追加&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/remix-run/react-router/discussions/8753&quot; title=&quot;Official v5 to v6 Migration Guide · Discussion #8753 · remix-run/react-router&quot;&gt;Official v5 to v6 Migration Guide · Discussion #8753 · remix-run/react-router&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-101-federated-credential-management-origin-trial-media-capabilities-for-webrtc-and-more&quot;&gt;Chromium Blog: Chrome 101: Federated Credential Management Origin Trial, Media Capabilities for WebRTC, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2022/03/chrome-101-federated-credential.html&quot; title=&quot;Chromium Blog: Chrome 101: Federated Credential Management Origin Trial, Media Capabilities for WebRTC, and More&quot;&gt;blog.chromium.org/2022/03/chrome-101-federated-credential.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 101ベータリリース。&lt;br&gt;
UA文字列の削減の開始。&lt;br&gt;
Origin TrialとしてFedCMの追加、Priority Hintsがデフォルトで有効化。&lt;br&gt;
&lt;code&gt;AudioContext.outputLatency&lt;/code&gt;の実装、CSSの&lt;code&gt;ont-palette&lt;/code&gt;プロパティの実装、MediaCapabilities APIがWebRTCをサポート。&lt;br&gt;
Third-Party contextでのWebSQLのサポートを削除など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/09/user-agent-reduction-origin-trial-and-dates.html&quot; title=&quot;Chromium Blog: User-Agent Reduction Origin Trial and Dates&quot;&gt;Chromium Blog: User-Agent Reduction Origin Trial and Dates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-react-native-0-68-react-native&quot;&gt;Announcing React Native 0.68 · React Native&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactnative.dev/blog/2022/03/30/version-068&quot; title=&quot;Announcing React Native 0.68 · React Native&quot;&gt;reactnative.dev/blog/2022/03/30/version-068&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Android&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Native 0.68リリース。&lt;br&gt;
依存関係のアップデート、opt-inでNew Architectureへの対応に対応。&lt;br&gt;
React 18の対応は含まれていない。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-0-7-0-facebookexperimental-recoil&quot;&gt;Release 0.7.0 · facebookexperimental/Recoil&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebookexperimental/Recoil/releases/tag/0.7.0&quot; title=&quot;Release 0.7.0 · facebookexperimental/Recoil&quot;&gt;github.com/facebookexperimental/Recoil/releases/tag/0.7.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Recoil 0.7.0リリース。&lt;br&gt;
&lt;code&gt;atom()&lt;/code&gt;と&lt;code&gt;atomFamily()&lt;/code&gt;に&lt;code&gt;default&lt;/code&gt;オプションを追加、Snapshotに&lt;code&gt;getStoreID()&lt;/code&gt;メソッドの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2022-03-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2022-03 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2022/04/03/ecmascript-proposal-update&quot; title=&quot;ECMAScript proposal updates @ 2022-03 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2022/04/03/ecmascript-proposal-update&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2022年3月のTC39 MeetingでのECMAScript ProposalのStage変更まとめ。&lt;br&gt;
Type AnnotationsがStage 1に、DecoratorがStage 3となった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/hemanth/updates-from-the-89th-tc39-meeting-5bkf&quot; title=&quot;Updates from the 89th TC39 meeting - DEV Community 👩‍💻👨‍💻&quot;&gt;Updates from the 89th TC39 meeting - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vite-changelog-md-at-main-vitejs-vite&quot;&gt;vite/CHANGELOG.md at main · vitejs/vite&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#290-2022-03-30&quot; title=&quot;vite/CHANGELOG.md at main · vitejs/vite&quot;&gt;github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#290-2022-03-30&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;vite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vite 2.9.0リリース。&lt;br&gt;
依存関係のscanとpre-bundleの処理を改善、実験的にCSSのSource Mapのサポート、Web WorkerのSource Mapサポートの改善。&lt;br&gt;
Glob Importsに&lt;code&gt;{ as: &amp;#39;raw&amp;#39; }&lt;/code&gt;を追加し、&lt;code&gt;{ assert: { type: &amp;#39;raw&amp;#39; }}&lt;/code&gt;は非推奨化。&lt;br&gt;
Plugin向けの変更として、ClientとServer間をWebSocketsでやりとりできるAPIの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-18-0-0-electron&quot;&gt;Electron 18.0.0 | Electron&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-18-0&quot; title=&quot;Electron 18.0.0 | Electron&quot;&gt;www.electronjs.org/blog/electron-18-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron 18.0.0リリース。&lt;br&gt;
Chromium 100、Node.js 16.13.2、V8 10.0へアップデート。&lt;br&gt;
Electron 15で&lt;code&gt;nativeWindowOpen: true&lt;/code&gt;がデフォルトとなったため、これを無効化するためだけに残されていた&lt;code&gt;nativeWindowOpen&lt;/code&gt;オプションが削除された。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-tool-in-firefox-devtools-reloaded-mozilla-hacks-the-web-developer-blog&quot;&gt;Performance Tool in Firefox DevTools Reloaded - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2022/03/performance-tool-in-firefox-devtools-reloaded/&quot; title=&quot;Performance Tool in Firefox DevTools Reloaded - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2022/03/performance-tool-in-firefox-devtools-reloaded/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefoxのパフォーマンスタブが新しくなる。&lt;br&gt;
プロファイルを記録し、そのパフォーマンスデータを &lt;a href=&quot;https://profiler.firefox.com/&quot;&gt;https://profiler.firefox.com/&lt;/a&gt; で表示と共有ができるようになる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://profiler.firefox.com/&quot; title=&quot;Firefox Profiler&quot;&gt;Firefox Profiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-devtools-chrome-100-chrome-developers&quot;&gt;What&amp;#039;s New In DevTools (Chrome 100) - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/new-in-devtools-100/&quot; title=&quot;What&amp;amp;#039;s New In DevTools (Chrome 100) - Chrome Developers&quot;&gt;developer.chrome.com/blog/new-in-devtools-100/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 100の開発者ツールの変更点について。&lt;br&gt;
&lt;code&gt;@support&lt;/code&gt;のサポート、Recorderで&lt;code&gt;data-test&lt;/code&gt;属性などのサポート、記録済みのセレクタの変更をサポート。&lt;br&gt;
&amp;quot;Droppped frames&amp;quot;を&amp;quot;Partially presented frames&amp;quot;という表現に変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;when-does-react-render-your-component&quot;&gt;When does React render your component?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zhenghao.io/posts/react-rerender&quot; title=&quot;When does React render your component?&quot;&gt;www.zhenghao.io/posts/react-rerender&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactコンポーネントがいつレンダリングされるかについて書かれた記事。&lt;br&gt;
Reactコンポーネントが再レンダリングされる条件、PropsとChildコンポーネントのレンダリング、Contextと再レンダリングについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-layout-algorithms&quot;&gt;Understanding Layout Algorithms&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.joshwcomeau.com/css/understanding-layout-algorithms/&quot; title=&quot;Understanding Layout Algorithms&quot;&gt;www.joshwcomeau.com/css/understanding-layout-algorithms/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSのレイアウトアルゴリズム(レイアウトモード)について。&lt;br&gt;
それぞれのレイアウトアルゴリズムによって同じプロパティでもどのように処理されるかは異なる。プロパティはレイアウトアルゴリズムという関数に渡される引数のようなものという話。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;locale-aware-sorting-in-javascript&quot;&gt;Locale Aware Sorting in JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://elijahmanor.com/byte/js-locale-sort&quot; title=&quot;Locale Aware Sorting in JavaScript&quot;&gt;elijahmanor.com/byte/js-locale-sort&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;を使ったローカライズされた文字列のソートについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;shakerphobia&quot;&gt;Shakerphobia&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://shakerphobia.netlify.app/&quot; title=&quot;Shakerphobia&quot;&gt;shakerphobia.netlify.app/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npmパッケージ時からimportするものを指定し、Tree Shaking後のbundle sizeを計測するツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nuxodin-dialog-polyfill-insert-and-thats-it-dialog-polyfill&quot;&gt;nuxodin/dialog-polyfill: &amp;quot;insert and thats it&amp;quot;-dialog-polyfill&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nuxodin/dialog-polyfill&quot; title=&quot;nuxodin/dialog-polyfill: \&amp;amp;quot;insert and thats it\&amp;amp;quot;-dialog-polyfill&quot;&gt;github.com/nuxodin/dialog-polyfill&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Dialog要素のpolyfillライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nicolo-ribaudo-jest-light-runner-a-jest-runner-that-runs-tests-directly-in-bare-node-js-without-virtualizing-the-environment&quot;&gt;nicolo-ribaudo/jest-light-runner: A Jest runner that runs tests directly in bare Node.js, without virtualizing the environment.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nicolo-ribaudo/jest-light-runner&quot; title=&quot;nicolo-ribaudo/jest-light-runner: A Jest runner that runs tests directly in bare Node.js, without virtualizing the environment.&quot;&gt;github.com/nicolo-ribaudo/jest-light-runner&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jest&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jest向けの軽量なRunner。&lt;br&gt;
&lt;code&gt;jest-runner&lt;/code&gt;からテストケースごとのIsolationのサポートを取り除くことで、テストの実行をより早くしている。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 09:31:54 +0900</pubDate>
        <link>https://jser.info/2022/04/06/react-18-vite-2.9.0-firefox/</link>
        <guid isPermaLink="true">https://jser.info/2022/04/06/react-18-vite-2.9.0-firefox/</guid>
        
        <category>React</category>
        
        <category>performance</category>
        
        <category>Chrome</category>
        
        <category>Firefox</category>
        
        <category>HTML</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
